@charset "UTF-8";
/* MAIN
---------------
Import all relevant files
--------------- */
/* Breakpoints
-------------------
Breakpoints for various screen sizes
------------------- */
/* Colors
-------------------
All colors used throughout the theme
------------------- */
/* Fonts
---------------
Fonts
--------------- */
/* Custom responsive scaling for headings */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    vertical-align: baseline;
    font: inherit;
    font-size: 100%;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
    display: block;
}

body {
    line-height: 1;
}

ol, ul {
    list-style: none;
}

blockquote, q {
    quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
    content: "";
    content: none;
}

table {
    border-spacing: 0;
    border-collapse: collapse;
}

html {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    height: 100%;
    font-size: 62.5%;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}

body {
    display: -webkit-box;
    display: flex;
    flex: 1;
    flex-direction: column;
    overflow-y: scroll;
    height: 100%;
    min-height: 100%;
    background: white;
    color: rgba(0, 0, 0, .8);
    font-size: 1.8rem;
    font-family: "Noto Sans", sans-serif;
    line-height: 1.8;

    -webkit-box-flex: 1;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 40rem) {
    body {
        font-size: 1.8rem;
    }
}
body main {
    flex: 1;

    -webkit-box-flex: 1;
}

* {
    box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6 {
    margin-top: 2rem;
    margin-bottom: 0;
    font-weight: 500;
    font-family: "Noto Sans", sans-serif;
    line-height: 1.2;
}
h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
    border: 0;
}

h1 {
    margin-top: 4rem;
    margin-bottom: 0;
    letter-spacing: -2px;
    font-size: calc(3.6rem + 2vw);
}

h2 {
    font-size: calc(2.25rem + 1.25vw);
}

h3 {
    font-size: calc(1.8rem + 1vw);
}

h4 {
    font-size: calc(1.44rem + .8vw);
}

h5 {
    font-weight: 600;
    font-size: calc(1.152rem + .64vw);
}

h6 {
    font-weight: 700;
    font-size: calc(.9rem + .5vw);
}

ul, ol {
    margin-top: 2rem;
    margin-bottom: 0;
}
@media (min-width: 80rem) {
    ul, ol {
        margin-top: 4rem;
        margin-bottom: 2rem;
    }
}

ul {
    margin-left: 4rem;
    padding: 0;
    list-style: square;
}
ul li {
    margin: 0 0 .5rem;
}
ul ul, ul ol {
    margin-top: 0;
    margin-bottom: .5rem;
}

ol {
    margin-left: 4rem;
    padding: 0;
    list-style: decimal;
}
ol li {
    margin: 0 0 .5rem;
}
ol ul, ol ol {
    margin-top: 0;
    margin-bottom: .5rem;
}

a {
    color: black;
    text-decoration: none;
    -webkit-transition: all .2s;
            transition: all .2s;
}
a:hover {
    border-color: black;
    color: black;
}

p, blockquote, figure, canvas, form {
    margin-top: 2rem;
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
}

.note {
    padding: 1rem;
    background: #F7F7F7;
}

mark {
    padding: .2rem;
    background-color: #FDFFB6;
    box-shadow: #FDFFB6 0 0 5px;
}

sup {
    vertical-align: super;
    font-size: 1.53rem;
}

blockquote {
    padding-left: 2rem;
    border-left: 4px solid #DDDDDD;
    font-family: "Noto Serif", serif;
}
blockquote img {
    margin: 2rem 0;
    width: 100%;
}

q {
    display: block;
    text-align: center;
    font-style: italic;
    font-size: 2.25rem;
    font-family: "Noto Serif", serif;
}
@media (min-width: 55rem) {
    q {
        margin-top: 4rem;
        margin-bottom: 2rem;
        margin-left: calc(0% - 2rem);
        width: calc(100% + 4rem);
        max-width: calc(100% + 4rem);
    }
}
q:before, q:after {
    display: none;
}

cite {
    display: block;
    color: #DDDDDD;
    text-transform: capitalize;
    font-style: normal;
    font-size: 1.44rem;
    font-family: "Noto Sans", sans-serif;
}
cite a {
    border: none;
    color: inherit;
}
cite:before {
    content: "— ";
}

em {
    font-style: italic;
}

strong {
    font-weight: bold;
}

pre {
    margin-top: 2rem;
}

code {
    padding: .3rem .6rem;
    background: #F7F7F7;
    color: black;
    font-size: 1.44rem;
    font-family: "Inconsolata", "Courier New";
}

hr {
    margin: 2rem 0 0;
    height: .4rem;
    border: 0;
    background: #DDDDDD;
}

.footer {
    background: #252525;
    color: #999999;
    text-transform: uppercase;
    -webkit-animation-delay: 1s;
            animation-delay: 1s;
}
.footer .colophon {
    padding: 4rem 2rem;
}
.footer .colophon section {
    margin: 0 auto;
    max-width: 80rem;
}
.footer .colophon section:first-child {
    margin-top: 0;
}
.footer .colophon section:last-child {
    margin-bottom: 0;
}
.footer .colophon section .ghost-logo {
    display: inline-block;
    margin-left: 5px;
    width: 4.2em;
    height: 1.3em;
    background: #848484;
    vertical-align: text-bottom;
    -webkit-transition: .2s all ease;
            transition: .2s all ease;

    -webkit-mask-image: url(../images/ghost-logo.svg);
            mask-image: url(../images/ghost-logo.svg);
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
}
.footer .colophon section .ghost-logo:hover {
    background-color: white;
}
.footer .bottom {
    padding: 2rem;
    background: #1D1D1D;
}
.footer .bottom section {
    margin: 0 auto;
    max-width: 80rem;
}
.footer .bottom section a {
    color: #848484;
}
.footer .bottom section a:hover {
    color: white;
}
.footer .bottom section a i.fa.fa-heart {
    color: #D85151;
}
.footer a {
    border-color: white;
    color: white;
}
.footer a:hover {
    border-color: white;
}
.footer .heart {
    display: inline-block;
    width: 1.3em;
    height: 1.3em;
    background: #FF4D4C;
    vertical-align: text-bottom;

    -webkit-mask-image: url(../images/heart.svg);
            mask-image: url(../images/heart.svg);
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
}

.feed.grid {
    display: -webkit-box;
    display: flex;
    flex-direction: column;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 80rem) {
    @supports (display: grid) {
        .feed.grid {
            display: -ms-grid;
            display:     grid;

            grid-gap: 2rem;
            grid-template-columns: repeat(auto-fit, minmax(50rem, 1fr));
            grid-auto-flow: dense;
        }
        .feed.grid .post {
            margin-bottom: 0;
        }
        .feed.grid .post.tag-hash-tall {
            min-height: 50vh;
        }
        .feed.grid .post.featured {
            -ms-grid-column-span: 2;
            grid-column: span 2;
        }
        .feed.grid .post.tag-hash-tall {
            -ms-grid-row-span: 2;
            grid-row-end: span 2;
        }
    }
    @supports not (display: grid) {
        .feed.grid {
            display: -webkit-box;
            display: flex;
            flex-direction: row;

            -webkit-box-orient: horizontal;
            -webkit-box-direction: normal;
            flex-wrap: wrap;
        }
        .feed.grid .post {
            width: calc(50% - 1rem);
        }
        .feed.grid .post:nth-of-type(2n) {
            margin-left: 2rem;
        }
    }
}

.header {
    background: black;
    color: rgba(255, 255, 255, .7);
}
.header a {
    color: white;
}
.header.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover;
    color: rgba(255, 255, 255, .7);
}
.header.cover-image a {
    color: white;
}
.header.cover-image:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .7);
}
.header .header--top {
    position: relative;
    z-index: 10;
    display: -webkit-box;
    display: flex;
    flex-direction: row;
    overflow: hidden;
    max-height: 6rem;
    line-height: 6rem;

    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-box-pack: justify;
    justify-content: space-between;
}
.header .header--top a.blog-title {
    float: left;
    padding-left: 2rem;
    height: 6rem;
    font-weight: 600;
}
.header .header--top a.blog-title img.blog-logo {
    margin: 1.5rem 0;
    padding: 0;
    width: auto;
    height: 3rem;
}
.header .header--top .blog-description {
    display: none;
    margin-left: 1rem;
}
@media (min-width: 55rem) {
    .header .header--top .blog-description {
        display: inline;
    }
}
.header .header--top nav.blog-navigation {
    float: right;
}
.header .header--top nav.blog-navigation ul.nav {
    margin: 0;
}
.header .header--top nav.blog-navigation ul.nav li {
    display: inline-block;
}
.header .hero {
    position: relative;
    z-index: 10;
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    height: 40rem;
    max-height: calc(100vh - 6rem);

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 40rem) {
    .header .hero {
        height: 50rem;
    }
}
@media (min-width: 55rem) {
    .header .hero {
        height: 60rem;
    }
}
@media (min-width: 80rem) {
    .header .hero {
        height: 70rem;
    }
}
@media (min-width: 100rem) {
    .header .hero {
        height: 70rem;
    }
}
.header .hero .hero-content {
    margin: auto;
    width: calc(100% - 4rem);
    max-width: 80rem;
    color: rgba(255, 255, 255, .7);
}
@media (min-width: 80rem) {
    .header .hero .hero-content {
        width: calc(100% - 6rem);
    }
}
.header .hero .hero-content p {
    margin-top: 1rem;
    margin-bottom: 1rem;
}
.header .hero .hero-content h1 {
    margin-top: 0;
    color: white;
}
.header .hero .hero-content h1 img {
    width: 100%;
    max-width: 400px;
}
.header .hero .hero-content a {
    color: rgba(255, 255, 255, .7);
            text-decoration: dotted;

    -webkit-text-decoration: dotted;
}
.header .hero .hero-content a:hover {
    color: white;
}
.header .hero .hero-content .post--tags {
    display: block;
    overflow: auto;
    margin-top: 2rem;
    width: 100%;
}
.header .hero .hero-content .post--tags a {
    display: inline-block;
    float: left;
    margin-right: .3rem;
    margin-bottom: .3rem;
    padding: .6rem;
    border: 1px solid rgba(255, 255, 255, .6);
    background: transparent;
    color: rgba(255, 255, 255, .6);
    text-transform: uppercase;
    line-height: 1;
}
.header .hero .hero-content .post--tags a:hover {
    background: white;
    color: black !important;
}

.author-template .hero {
    text-align: center;
}
.author-template .hero .author-image {
    margin-bottom: 2rem;
    width: 10rem;
    height: auto;
    border-radius: 50%;
}
@media (min-width: 40rem) {
    .author-template .hero .author-image {
        width: 15rem;
    }
}
@media (min-width: 55rem) {
    .author-template .hero .author-image {
        width: 17.5rem;
    }
}
.author-template .hero .author-data span {
    display: block;
    margin-bottom: 1rem;
}
.header .header--top nav.blog-navigation {
    float: right;
}
.header .header--top nav.blog-navigation ul {
    margin: 0 1rem 0 0;
}
.header .header--top nav.blog-navigation ul li {
    display: inline-block;
    margin-right: 1rem;
    font-size: 1.35rem;
}
.header .header--top nav.blog-navigation ul li[class$=icon] {
    margin-right: .4rem;
}
.header .header--top nav.blog-navigation ul li[class$=icon] .label {
    display: none;
}
.header .header--top nav.blog-navigation ul li[class$=icon] a:before {
    content: "";
    display: inline-block;
    margin-top: -.5rem;
    width: 2.5rem;
    height: 2.5rem;
    background-color: #848484;
    background-size: contain;
    vertical-align: middle;

    -webkit-mask-size: contain;
            mask-size: contain;
}
.header .header--top nav.blog-navigation ul li[class$=icon] a:hover:before {
    background-color: black;
}
.header .header--top nav.blog-navigation ul li.nav-github-icon a:before {
    -webkit-mask-image: url(../images/github.svg);
            mask-image: url(../images/github.svg);
}
.header .header--top nav.blog-navigation ul li.nav-twitter-icon a:before {
    -webkit-mask-image: url(../images/twitter.svg);
            mask-image: url(../images/twitter.svg);
}
.header .header--top nav.blog-navigation ul li.nav-rss-icon a:before {
    -webkit-mask-image: url(../images/rss.svg);
            mask-image: url(../images/rss.svg);
}
.header .header--top nav.blog-navigation ul li.nav-facebook-icon a:before {
    -webkit-mask-image: url(../images/facebook.svg);
            mask-image: url(../images/facebook.svg);
}
.header .header--top nav.blog-navigation ul li.nav-download-icon a:before {
    -webkit-mask-image: url(../images/download.svg);
            mask-image: url(../images/download.svg);
}
.header .header--top nav.blog-navigation ul li.nav-image-icon a:before {
    -webkit-mask-image: url(../images/image.svg);
            mask-image: url(../images/image.svg);
}
.header .header--top nav.blog-navigation ul li.nav-tumblr-icon a:before {
    -webkit-mask-image: url(../images/tumblr.svg);
            mask-image: url(../images/tumblr.svg);
}
.header .header--top nav.blog-navigation ul li.nav-steam-icon a:before {
    -webkit-mask-image: url(../images/steam.svg);
            mask-image: url(../images/steam.svg);
}
.header .header--top nav.blog-navigation ul li.nav-googleplus-icon a:before {
    -webkit-mask-image: url(../images/google-plus.svg);
            mask-image: url(../images/google-plus.svg);
}
.header .header--top nav.blog-navigation ul li.nav-camera-icon a:before {
    -webkit-mask-image: url(../images/camera.svg);
            mask-image: url(../images/camera.svg);
}
.header .header--top nav.blog-navigation ul li.nav-email-icon a:before {
    -webkit-mask-image: url(../images/email.svg);
            mask-image: url(../images/email.svg);
}
.header .header--top nav.blog-navigation ul li.nav-telegram-icon a:before {
    -webkit-mask-image: url(../images/telegram.svg);
            mask-image: url(../images/telegram.svg);
}
.header .header--top nav.blog-navigation ul li.nav-camera-icon a:before {
    -webkit-mask-image: url(../images/camera.svg);
            mask-image: url(../images/camera.svg);
}
.header .header--top nav.blog-navigation ul li:last-of-type {
    margin-right: 1rem;
}
.header.cover-image .header--top nav.blog-navigation ul li[class$=icon] a:before {
    background-color: white;
}

.kg-card.kg-bookmark-card {
    position: relative;
    width: 100%;
}
.kg-card.kg-bookmark-card .kg-bookmark-container {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    color: #252525;
    text-decoration: none;
    font-family: inherit;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 55rem) {
    .kg-card.kg-bookmark-card .kg-bookmark-container {
        flex-direction: row-reverse;

        -webkit-box-orient: horizontal;
        -webkit-box-direction: reverse;
    }
}
.kg-card.kg-bookmark-card .kg-bookmark-container:hover {
    text-decoration: none;
}
.kg-card.kg-bookmark-card .kg-bookmark-content {
    padding: 2rem;
    background: #F7F7F7;

    flex-basis: 0;
    -webkit-box-flex: 999;
    flex-grow: 999;
    -webkit-box-ordinal-group: 2;
    order: 1;
}
.kg-card.kg-bookmark-card .kg-bookmark-title {
    font-weight: 600;
}
.kg-card.kg-bookmark-card .kg-bookmark-metadata, .kg-card.kg-bookmark-card .kg-bookmark-description {
    margin-top: 1rem;
}
.kg-card.kg-bookmark-card .kg-bookmark-metadata {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    -webkit-box-align: center;
    align-items: center;
}
.kg-card.kg-bookmark-card .kg-bookmark-description {
    display: -webkit-box;
    overflow: hidden;

    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
}
.kg-card.kg-bookmark-card .kg-bookmark-icon {
    display: inline-block;
    margin-right: .5rem;
    margin-bottom: .05rem;
    width: 1rem;
    height: 1rem;
    vertical-align: text-bottom;
}
.kg-card.kg-bookmark-card .kg-bookmark-thumbnail {
    display: -webkit-box;
    display: flex;

    flex-basis: 24rem;
    -webkit-box-flex: 1;
    flex-grow: 1;
}
.kg-card.kg-bookmark-card .kg-bookmark-thumbnail img {
    height: auto;
    max-width: 100%;
    vertical-align: bottom;

    -o-object-fit: cover;
       object-fit: cover;
}
.kg-card.kg-bookmark-card .kg-bookmark-author {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.kg-card.kg-bookmark-card .kg-bookmark-publisher::before {
    content: "•";
    margin: 0 1rem;
}

.kg-card.kg-embed-card iframe {
    width: 100%;
    height: auto;
}
.kg-card.kg-embed-card.responsive-video {
    position: relative;
}
.kg-card.kg-embed-card.responsive-video iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@media (min-width: 80rem) {
    .kg-card.kg-width-full {
        margin-top: 4rem;
        margin-bottom: 1rem;
    }
}
.kg-card.kg-width-full img {
    position: relative;
    right: 50%;
    left: 50%;
    margin-right: -50vw;
    margin-left: -50vw;
    width: 100vw;
    max-width: none;
}

@media (min-width: 80rem) {
    .kg-card.kg-gallery-card {
        margin-top: 4rem;
        margin-bottom: 1rem;
    }
}
.kg-card.kg-gallery-card .kg-gallery-container {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    margin: 0 auto 0;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row {
    display: -webkit-box;
    display: flex;
    flex-direction: row;

    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-box-pack: center;
    justify-content: center;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row:not(:first-of-type) {
    margin: 1rem 0 0 0;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image:not(:first-of-type) {
    margin: 0 0 0 1rem;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image img {
    display: block;
    margin: 0;
    width: 100%;
    height: 100%;
}

.kg-card.kg-image-card figcaption {
    margin-top: 1rem;
    text-align: center;
    font-size: 1.35rem;
}

.kg-card.kg-width-wide {
    width: 100vw;
    max-width: 100%;
}
@media (min-width: 80rem) {
    .kg-card.kg-width-wide {
        margin-top: 4rem;
        margin-bottom: 1rem;
        max-width: 74rem;
    }
}
@media (min-width: 100rem) {
    .kg-card.kg-width-wide {
        max-width: 90rem;
    }
}
@media (min-width: 140rem) {
    .kg-card.kg-width-wide {
        max-width: 130rem;
    }
}
.kg-card.kg-width-wide img {
    max-width: 100%;
}

.kg-card {
    margin-top: 2rem;
    margin-bottom: 0;
}
@media (min-width: 80rem) {
    .kg-card {
        margin-top: 4rem;
        margin-bottom: 2rem;
    }
}

pre {
    overflow-x: scroll;
    margin-top: 2rem;
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
    padding: .5rem 1.5rem;
    width: 100vw;
    max-width: 100%;
    background: #F7F7F7;
    word-wrap: break-word;
}
pre code {
    padding: 0;
    background: none;
    font-size: 1.2rem;
    font-family: "Inconsolata", "Courier New";
}
@media (min-width: 80rem) {
    pre code {
        font-size: 1.5rem;
    }
}

.content a {
    color: black;
    text-decoration: underline;
    -webkit-transition: all .2s;
            transition: all .2s;
}
.content a:hover {
    border-color: black;
    color: black;
}

.content img {
    display: block;
    margin: 0 auto;
    height: auto;
    max-width: 100%;
}

.feed .post {
    position: relative;
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    margin-bottom: 2rem;
    padding: 2rem;
    background-color: #585858;
    background-position: center;
    background-size: cover;
    color: white;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 55rem) {
    .feed .post {
        padding: 2rem;
        min-height: 25vh;
    }
}
.feed .post a {
    color: inherit;
}
.feed .post.has-image:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .8);
}
@media (min-width: 55rem) {
    .feed .post.has-image:after {
        background: rgba(0, 0, 0, .7);
    }
}
.feed .post .post--top-content {
    position: relative;
    z-index: 20;
    flex: 1;
    max-width: 80rem;

    -webkit-box-flex: 1;
}
.feed .post .post--bottom-content {
    position: relative;
    z-index: 20;
    height: auto;
    max-width: 80rem;
}
.feed .post .post--tags {
    display: block;
    overflow: auto;
    margin-bottom: 1rem;
    width: 100%;
    font-size: 1.2rem;
}
.feed .post .post--tags a {
    display: inline-block;
    float: left;
    margin-right: .3rem;
    margin-bottom: .3rem;
    padding: .6rem;
    border: .1rem solid rgba(255, 255, 255, .6);
    background: transparent;
    color: rgba(255, 255, 255, .6);
    text-transform: uppercase;
    line-height: 1;
}
@media (min-width: 100rem) {
    .feed .post .post--tags a:not(:nth-of-type(1)) {
        opacity: 0;
    }
}
.feed .post .post--tags a:hover {
    background: white;
    color: #252525 !important;
}
.feed .post .post--tags:hover a {
    border-color: white;
    color: white;
}
.feed .post .post--tags:hover a:not(:nth-of-type(1)) {
    display: inline-block;
}
.feed .post:hover .post--tags a:not(:nth-of-type(1)) {
    opacity: 1;
}
.feed .post .post--title {
    margin: 0;
}
.feed .post .post--title a {
    font-size: inherit;
}
.feed .post .post--excerpt {
    margin: 1rem 0;
    max-width: 55rem;
    color: rgba(255, 255, 255, .6);
    font-size: 1.35rem;
}
.feed .post .post--read-time {
    margin-bottom: 1rem;
    color: rgba(255, 255, 255, .6);
    font-size: 1.35rem;
}
.feed .post .post--meta {
    display: block;
    color: rgba(255, 255, 255, .6);
    font-size: 1.35rem;
    line-height: 1.5;
}
.feed .post .post--meta .author {
    color: white;
}
.feed .post .post--meta .author a {
    border-color: transparent;
}
.feed .post .post--meta .author a:hover {
    border-color: white;
}

.feed {
    padding: 2rem;
    padding-bottom: 0;
}

.index {
    background: #F7F7F7;
}
.index .header:not(.cover-image) {
    background: white;
    color: rgba(0, 0, 0, .7);
}
.index .header:not(.cover-image) a {
    color: black;
}

.page-template .main {
    margin: 0 auto;
    width: 100%;
    background: white;
}
.page-template .main .content {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    margin: auto;
    padding: 2rem;
    max-width: 80rem;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-box-align: center;
    align-items: center;
}
@media (min-width: 80rem) {
    .page-template .main .content {
        padding: 4rem;
        max-width: 86rem;
    }
}
.page-template .main .content > * {
    min-width: 100%;
}
.page-template .main .content > *:first-child {
    margin-top: 0;
}
.page-template .main .content > *:last-child {
    margin-bottom: 0;
}

nav.pagination {
    text-align: center;
    line-height: 12rem;
}
nav.pagination .newer-posts, nav.pagination .older-posts {
    color: black;
}
nav.pagination .page-number {
    margin: 0 2rem;
    color: #848484;
}

.post-template .main {
    margin: 0 auto;
    width: 100%;
    background: white;
}
.post-template .main .content {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    margin: auto;
    padding: 2rem;
    max-width: 84rem;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-box-align: center;
    align-items: center;
}
@media (min-width: 55rem) {
    .post-template .main .content {
        padding: 4rem;
        max-width: 86rem;
    }
}
.post-template .main .content > * {
    min-width: 100%;
}
.post-template .main .content > *:first-child {
    margin-top: 0;
}
.post-template .main .content > *:last-child {
    margin-bottom: 0;
}

.read-more {
    padding: 4rem 0;
    max-height: 100vh;
    background: black;
    color: rgba(255, 255, 255, .7);
}
@media (min-width: 55rem) {
    .read-more {
        padding: 6rem 0;
    }
}
@media (min-width: 100rem) {
    .read-more {
        padding: 8rem 0;
    }
}
.read-more.home {
    background: white;
    color: rgba(0, 0, 0, .7);
}
.read-more.home a {
    color: black;
}
.read-more.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover;
}
.read-more.cover-image:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .7);
}
.read-more:hover {
    color: white;
}
.read-more:hover a {
    color: white;
}
.read-more .hero-content {
    position: relative;
    z-index: 10;
    margin: auto;
    width: calc(100% - 4rem);
    max-width: 80rem;
}
.read-more .hero-content .post-title {
    display: block;
    letter-spacing: -.2rem;
    font-size: calc(3.375rem + 1.875vw);
    line-height: 1.2;
}
.read-more .hero-content p {
    margin-top: 1rem;
    margin-bottom: 1rem;
}
.read-more .hero-content p.read-more-text {
    margin-bottom: 4rem;
    color: rgba(255, 255, 255, .7);
    text-align: center;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 1.35rem;
}

.tag-template .main {
    background: white;
}
.tag-template .main .tag {
    margin: 0 auto;
    max-width: 80rem;
}
.tag-template .main .tag .tag-content > *:first-child {
    margin-top: 0;
}
.tag-template .main .tag .tag-content > *:last-child {
    margin-bottom: 0;
}

.animated {
    -webkit-animation-duration: 1s;
            animation-duration: 1s;

    -webkit-animation-fill-mode: both;
            animation-fill-mode: both;
}

.delay-1 {
    -webkit-animation-delay: .2s;
            animation-delay: .2s;
}

.delay-2 {
    -webkit-animation-delay: .4s;
            animation-delay: .4s;
}

.delay-3 {
    -webkit-animation-delay: .6s;
            animation-delay: .6s;
}

.delay-4 {
    -webkit-animation-delay: .8s;
            animation-delay: .8s;
}

.delay-5 {
    -webkit-animation-delay: 1s;
            animation-delay: 1s;
}

@-webkit-keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}
.fadeIn {
    -webkit-animation-name: fadeIn;
            animation-name: fadeIn;
}

@-webkit-keyframes fadeInUp {
    0% {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
    }
    100% {
        opacity: 1;
        -webkit-transform: none;
                transform: none;
    }
}

@keyframes fadeInUp {
    0% {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
    }
    100% {
        opacity: 1;
        -webkit-transform: none;
                transform: none;
    }
}
.fadeInUp {
    -webkit-animation-name: fadeInUp;
            animation-name: fadeInUp;
}

/* Deprecated fix for the old way of handling images, just so they don't look terrible */
.content img[src$="#large"], .content img[src$="#full"] {
    margin-left: -2rem;
    width: calc(100% + 4rem);
}
@media (min-width: 100rem) {
    .content img[src$="#large"], .content img[src$="#full"] {
        margin-left: -25%;
        width: 150%;
    }
}
@media (min-width: 140rem) {
    .content img[src$="#large"], .content img[src$="#full"] {
        margin-left: -50%;
        width: 200%;
    }
}

/* Fix for 100vw and horizontal scrollbar */
body {
    overflow-x: hidden;
}

.hidden {
    display: none;
}

@media (min-width: 100rem) {
    .alignleft, .alignright {
        margin-bottom: 2rem;
        padding-bottom: 0;
        width: 30rem;
    }
    .alignleft img, .alignright img {
        margin: 0;
    }

    .alignleft {
        float: left;
        margin-right: 2rem;
        margin-left: -16rem;
    }
    .alignleft q {
        margin: 0;
        width: initial;
        text-align: right;
    }

    blockquote.alignleft {
        padding-right: 2rem;
        padding-left: 0;
        border-right: .4rem solid #DDDDDD;
        border-left: 0;
        text-align: right;
    }

    q.alignleft {
        margin-top: 0;
        text-align: right;
    }

    .alignright {
        float: right;
        margin-right: -16rem;
        margin-left: 2rem;
    }
    .alignright q, .alignrightq {
        margin: 0;
        width: initial;
        text-align: left;
    }

    q.alignright {
        margin: 0;
        text-align: left;
    }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
