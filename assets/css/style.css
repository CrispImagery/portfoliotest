@charset "UTF-8";
/* MAIN
---------------
Import all relevant files
--------------- */
/* Breakpoints
-------------------
Breakpoints for various screen sizes
------------------- */
/* Colors
-------------------
All colors used throughout the theme
------------------- */
/* Fonts
---------------
Fonts
--------------- */
/* Custom responsive scaling for headings */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    vertical-align: baseline;
    font: inherit;
    font-size: 100%;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
    display: block;
}

body {
    line-height: 1;
}

ol, ul {
    list-style: none;
}

blockquote, q {
    quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
    content: "";
    content: none;
}

table {
    border-spacing: 0;
    border-collapse: collapse;
}

html {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    height: 100%;
    font-size: 62.5%;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}

body {
    display: -webkit-box;
    display: flex;
    flex: 1;
    flex-direction: column;
    overflow-y: scroll;
    height: 100%;
    min-height: 100%;
    background: white;
    color: rgba(0, 0, 0, .8);
    font-size: 1.8rem;
    font-family: "Noto Sans", sans-serif;
    line-height: 1.8;

    -webkit-box-flex: 1;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 40rem) {
    body {
        font-size: 1.8rem;
    }
}
body main {
    flex: 1;

    -webkit-box-flex: 1;
}

* {
    box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6 {
    margin-top: 2rem;
    margin-bottom: 0;
    font-weight: 500;
    font-family: "Noto Sans", sans-serif;
    line-height: 1.2;
}
h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
    border: 0;
}

h1 {
    margin-top: 4rem;
    margin-bottom: 0;
    letter-spacing: -2px;
    font-size: calc(3.6rem + 2vw);
}

h2 {
    font-size: calc(2.25rem + 1.25vw);
}

h3 {
    font-size: calc(1.8rem + 1vw);
}

h4 {
    font-size: calc(1.44rem + .8vw);
}

h5 {
    font-weight: 600;
    font-size: calc(1.152rem + .64vw);
}

h6 {
    font-weight: 700;
    font-size: calc(.9rem + .5vw);
}

ul, ol {
    margin-top: 2rem;
    margin-bottom: 0;
}
@media (min-width: 80rem) {
    ul, ol {
        margin-top: 4rem;
        margin-bottom: 2rem;
    }
}

ul {
    margin-left: 4rem;
    padding: 0;
    list-style: square;
}
ul li {
    margin: 0 0 .5rem;
}
ul ul, ul ol {
    margin-top: 0;
    margin-bottom: .5rem;
}

ol {
    margin-left: 4rem;
    padding: 0;
    list-style: decimal;
}
ol li {
    margin: 0 0 .5rem;
}
ol ul, ol ol {
    margin-top: 0;
    margin-bottom: .5rem;
}

a {
    color: black;
    text-decoration: none;
    -webkit-transition: all .2s;
            transition: all .2s;
}
a:hover {
    border-color: black;
    color: black;
}

p, blockquote, figure, canvas, form {
    margin-top: 2rem;
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
}

.note {
    padding: 1rem;
    background: #F7F7F7;
}

mark {
    padding: .2rem;
    background-color: #FDFFB6;
    box-shadow: #FDFFB6 0 0 5px;
}

sup {
    vertical-align: super;
    font-size: 1.53rem;
}

blockquote {
    padding-left: 2rem;
    border-left: 4px solid #DDDDDD;
    font-family: "Noto Serif", serif;
}
blockquote img {
    margin: 2rem 0;
    width: 100%;
}

q {
    display: block;
    text-align: center;
    font-style: italic;
    font-size: 2.25rem;
    font-family: "Noto Serif", serif;
}
@media (min-width: 55rem) {
    q {
        margin-top: 4rem;
        margin-bottom: 2rem;
        margin-left: calc(0% - 2rem);
        width: calc(100% + 4rem);
        max-width: calc(100% + 4rem);
    }
}
q:before, q:after {
    display: none;
}

cite {
    display: block;
    color: #DDDDDD;
    text-transform: capitalize;
    font-style: normal;
    font-size: 1.44rem;
    font-family: "Noto Sans", sans-serif;
}
cite a {
    border: none;
    color: inherit;
}
cite:before {
    content: "— ";
}

em {
    font-style: italic;
}

strong {
    font-weight: bold;
}

pre {
    margin-top: 2rem;
}

code {
    padding: .3rem .6rem;
    background: #F7F7F7;
    color: black;
    font-size: 1.44rem;
    font-family: "Inconsolata", "Courier New";
}

hr {
    margin: 2rem 0 0;
    height: .4rem;
    border: 0;
    background: #DDDDDD;
}

.footer {
    background: #252525;
    color: #999999;
    text-transform: uppercase;
    -webkit-animation-delay: 1s;
            animation-delay: 1s;
}
.footer .colophon {
    padding: 4rem 2rem;
}
.footer .colophon section {
    margin: 0 auto;
    max-width: 80rem;
}
.footer .colophon section:first-child {
    margin-top: 0;
}
.footer .colophon section:last-child {
    margin-bottom: 0;
}
.footer .colophon section .ghost-logo {
    display: inline-block;
    margin-left: 5px;
    width: 4.2em;
    height: 1.3em;
    background: #848484;
    vertical-align: text-bottom;
    -webkit-transition: .2s all ease;
            transition: .2s all ease;

    -webkit-mask-image: url(../images/ghost-logo.svg);
            mask-image: url(../images/ghost-logo.svg);
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
}
.footer .colophon section .ghost-logo:hover {
    background-color: white;
}
.footer .bottom {
    padding: 2rem;
    background: #1D1D1D;
}
.footer .bottom section {
    margin: 0 auto;
    max-width: 80rem;
}
.footer .bottom section a {
    color: #848484;
}
.footer .bottom section a:hover {
    color: white;
}
.footer .bottom section a i.fa.fa-heart {
    color: #D85151;
}
.footer a {
    border-color: white;
    color: white;
}
.footer a:hover {
    border-color: white;
}
.footer .heart {
    display: inline-block;
    width: 1.3em;
    height: 1.3em;
    background: #FF4D4C;
    vertical-align: text-bottom;

    -webkit-mask-image: url(../images/heart.svg);
            mask-image: url(../images/heart.svg);
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
}

.feed.grid {
    display: -webkit-box;
    display: flex;
    flex-direction: column;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 80rem) {
    @supports (display: grid) {
        .feed.grid {
            display: -ms-grid;
            display:     grid;

            grid-gap: 2rem;
            grid-template-columns: repeat(auto-fit, minmax(50rem, 1fr));
            grid-auto-flow: dense;
        }
        .feed.grid .post {
            margin-bottom: 0;
        }
        .feed.grid .post.tag-hash-tall {
            min-height: 50vh;
        }
        .feed.grid .post.featured {
            -ms-grid-column-span: 2;
            grid-column: span 2;
        }
        .feed.grid .post.tag-hash-tall {
            -ms-grid-row-span: 2;
            grid-row-end: span 2;
        }
    }
    @supports not (display: grid) {
        .feed.grid {
            display: -webkit-box;
            display: flex;
            flex-direction: row;

            -webkit-box-orient: horizontal;
            -webkit-box-direction: normal;
            flex-wrap: wrap;
        }
        .feed.grid .post {
            width: calc(50% - 1rem);
        }
        .feed.grid .post:nth-of-type(2n) {
            margin-left: 2rem;
        }
    }
}

.header {
    background: black;
    color: rgba(255, 255, 255, .7);
}
.header a {
    color: white;
}
.header.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover;
    color: rgba(255, 255, 255, .7);
}
.header.cover-image a {
    color: white;
}
.header.cover-image:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .7);
}
.header .header--top {
    position: relative;
    z-index: 10;
    display: -webkit-box;
    display: flex;
    flex-direction: row;
    overflow: hidden;
    max-height: 6rem;
    line-height: 6rem;

    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-box-pack: justify;
    justify-content: space-between;
}
.header .header--top a.blog-title {
    float: left;
    padding-left: 2rem;
    height: 6rem;
    font-weight: 600;
}
.header .header--top a.blog-title img.blog-logo {
    margin: 1.5rem 0;
    padding: 0;
    width: auto;
    height: 3rem;
}
.header .header--top .blog-description {
    display: none;
    margin-left: 1rem;
}
@media (min-width: 55rem) {
    .header .header--top .blog-description {
        display: inline;
    }
}
.header .header--top nav.blog-navigation {
    float: right;
}
.header .header--top nav.blog-navigation ul.nav {
    margin: 0;
}
.header .header--top nav.blog-navigation ul.nav li {
    display: inline-block;
}
.header .hero {
    position: relative;
    z-index: 10;
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    height: 40rem;
    max-height: calc(100vh - 6rem);

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 40rem) {
    .header .hero {
        height: 50rem;
    }
}
@media (min-width: 55rem) {
    .header .hero {
        height: 60rem;
    }
}
@media (min-width: 80rem) {
    .header .hero {
        height: 70rem;
    }
}
@media (min-width: 100rem) {
    .header .hero {
        height: 70rem;
    }
}
.header .hero .hero-content {
    margin: auto;
    width: calc(100% - 4rem);
    max-width: 80rem;
    color: rgba(255, 255, 255, .7);
}
@media (min-width: 80rem) {
    .header .hero .hero-content {
        width: calc(100% - 6rem);
    }
}
.header .hero .hero-content p {
    margin-top: 1rem;
    margin-bottom: 1rem;
}
.header .hero .hero-content h1 {
    margin-top: 0;
    color: white;
}
.header .hero .hero-content h1 img {
    width: 100%;
    max-width: 400px;
}
.header .hero .hero-content a {
    color: rgba(255, 255, 255, .7);
            text-decoration: dotted;

    -webkit-text-decoration: dotted;
}
.header .hero .hero-content a:hover {
    color: white;
}
.header .hero .hero-content .post--tags {
    display: block;
    overflow: auto;
    margin-top: 2rem;
    width: 100%;
}
.header .hero .hero-content .post--tags a {
    display: inline-block;
    float: left;
    margin-right: .3rem;
    margin-bottom: .3rem;
    padding: .6rem;
    border: 1px solid rgba(255, 255, 255, .6);
    background: transparent;
    color: rgba(255, 255, 255, .6);
    text-transform: uppercase;
    line-height: 1;
}
.header .hero .hero-content .post--tags a:hover {
    background: white;
    color: black !important;
}

.author-template .hero {
    text-align: center;
}
.author-template .hero .author-image {
    margin-bottom: 2rem;
    width: 10rem;
    height: auto;
    border-radius: 50%;
}
@media (min-width: 40rem) {
    .author-template .hero .author-image {
        width: 15rem;
    }
}
@media (min-width: 55rem) {
    .author-template .hero .author-image {
        width: 17.5rem;
    }
}
.author-template .hero .author-data span {
    display: block;
    margin-bottom: 1rem;
}
.header .header--top nav.blog-navigation {
    float: right;
}
.header .header--top nav.blog-navigation ul {
    margin: 0 1rem 0 0;
}
.header .header--top nav.blog-navigation ul li {
    display: inline-block;
    margin-right: 1rem;
    font-size: 1.35rem;
}
.header .header--top nav.blog-navigation ul li[class$=icon] {
    margin-right: .4rem;
}
.header .header--top nav.blog-navigation ul li[class$=icon] .label {
    display: none;
}
.header .header--top nav.blog-navigation ul li[class$=icon] a:before {
    content: "";
    display: inline-block;
    margin-top: -.5rem;
    width: 2.5rem;
    height: 2.5rem;
    background-color: #848484;
    background-size: contain;
    vertical-align: middle;

    -webkit-mask-size: contain;
            mask-size: contain;
}
.header .header--top nav.blog-navigation ul li[class$=icon] a:hover:before {
    background-color: black;
}
.header .header--top nav.blog-navigation ul li.nav-github-icon a:before {
    -webkit-mask-image: url(../images/github.svg);
            mask-image: url(../images/github.svg);
}
.header .header--top nav.blog-navigation ul li.nav-twitter-icon a:before {
    -webkit-mask-image: url(../images/twitter.svg);
            mask-image: url(../images/twitter.svg);
}
.header .header--top nav.blog-navigation ul li.nav-rss-icon a:before {
    -webkit-mask-image: url(../images/rss.svg);
            mask-image: url(../images/rss.svg);
}
.header .header--top nav.blog-navigation ul li.nav-facebook-icon a:before {
    -webkit-mask-image: url(../images/facebook.svg);
            mask-image: url(../images/facebook.svg);
}
.header .header--top nav.blog-navigation ul li.nav-download-icon a:before {
    -webkit-mask-image: url(../images/download.svg);
            mask-image: url(../images/download.svg);
}
.header .header--top nav.blog-navigation ul li.nav-image-icon a:before {
    -webkit-mask-image: url(../images/image.svg);
            mask-image: url(../images/image.svg);
}
.header .header--top nav.blog-navigation ul li.nav-tumblr-icon a:before {
    -webkit-mask-image: url(../images/tumblr.svg);
            mask-image: url(../images/tumblr.svg);
}
.header .header--top nav.blog-navigation ul li.nav-steam-icon a:before {
    -webkit-mask-image: url(../images/steam.svg);
            mask-image: url(../images/steam.svg);
}
.header .header--top nav.blog-navigation ul li.nav-googleplus-icon a:before {
    -webkit-mask-image: url(../images/google-plus.svg);
            mask-image: url(../images/google-plus.svg);
}
.header .header--top nav.blog-navigation ul li.nav-camera-icon a:before {
    -webkit-mask-image: url(../images/camera.svg);
            mask-image: url(../images/camera.svg);
}
.header .header--top nav.blog-navigation ul li.nav-email-icon a:before {
    -webkit-mask-image: url(../images/email.svg);
            mask-image: url(../images/email.svg);
}
.header .header--top nav.blog-navigation ul li.nav-telegram-icon a:before {
    -webkit-mask-image: url(../images/telegram.svg);
            mask-image: url(../images/telegram.svg);
}
.header .header--top nav.blog-navigation ul li.nav-camera-icon a:before {
    -webkit-mask-image: url(../images/camera.svg);
            mask-image: url(../images/camera.svg);
}
.header .header--top nav.blog-navigation ul li:last-of-type {
    margin-right: 1rem;
}
.header.cover-image .header--top nav.blog-navigation ul li[class$=icon] a:before {
    background-color: white;
}

.kg-card.kg-bookmark-card {
    position: relative;
    width: 100%;
}
.kg-card.kg-bookmark-card .kg-bookmark-container {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    color: #252525;
    text-decoration: none;
    font-family: inherit;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 55rem) {
    .kg-card.kg-bookmark-card .kg-bookmark-container {
        flex-direction: row-reverse;

        -webkit-box-orient: horizontal;
        -webkit-box-direction: reverse;
    }
}
.kg-card.kg-bookmark-card .kg-bookmark-container:hover {
    text-decoration: none;
}
.kg-card.kg-bookmark-card .kg-bookmark-content {
    padding: 2rem;
    background: #F7F7F7;

    flex-basis: 0;
    -webkit-box-flex: 999;
    flex-grow: 999;
    -webkit-box-ordinal-group: 2;
    order: 1;
}
.kg-card.kg-bookmark-card .kg-bookmark-title {
    font-weight: 600;
}
.kg-card.kg-bookmark-card .kg-bookmark-metadata, .kg-card.kg-bookmark-card .kg-bookmark-description {
    margin-top: 1rem;
}
.kg-card.kg-bookmark-card .kg-bookmark-metadata {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    -webkit-box-align: center;
    align-items: center;
}
.kg-card.kg-bookmark-card .kg-bookmark-description {
    display: -webkit-box;
    overflow: hidden;

    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
}
.kg-card.kg-bookmark-card .kg-bookmark-icon {
    display: inline-block;
    margin-right: .5rem;
    margin-bottom: .05rem;
    width: 1rem;
    height: 1rem;
    vertical-align: text-bottom;
}
.kg-card.kg-bookmark-card .kg-bookmark-thumbnail {
    display: -webkit-box;
    display: flex;

    flex-basis: 24rem;
    -webkit-box-flex: 1;
    flex-grow: 1;
}
.kg-card.kg-bookmark-card .kg-bookmark-thumbnail img {
    height: auto;
    max-width: 100%;
    vertical-align: bottom;

    -o-object-fit: cover;
       object-fit: cover;
}
.kg-card.kg-bookmark-card .kg-bookmark-author {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.kg-card.kg-bookmark-card .kg-bookmark-publisher::before {
    content: "•";
    margin: 0 1rem;
}

.kg-card.kg-embed-card iframe {
    width: 100%;
    height: auto;
}
.kg-card.kg-embed-card.responsive-video {
    position: relative;
}
.kg-card.kg-embed-card.responsive-video iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@media (min-width: 80rem) {
    .kg-card.kg-width-full {
        margin-top: 4rem;
        margin-bottom: 1rem;
    }
}
.kg-card.kg-width-full img {
    position: relative;
    right: 50%;
    left: 50%;
    margin-right: -50vw;
    margin-left: -50vw;
    width: 100vw;
    max-width: none;
}

@media (min-width: 80rem) {
    .kg-card.kg-gallery-card {
        margin-top: 4rem;
        margin-bottom: 1rem;
    }
}
.kg-card.kg-gallery-card .kg-gallery-container {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    margin: 0 auto 0;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row {
    display: -webkit-box;
    display: flex;
    flex-direction: row;

    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -webkit-box-pack: center;
    justify-content: center;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row:not(:first-of-type) {
    margin: 1rem 0 0 0;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image:not(:first-of-type) {
    margin: 0 0 0 1rem;
}
.kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image img {
    display: block;
    margin: 0;
    width: 100%;
    height: 100%;
}

.kg-card.kg-image-card figcaption {
    margin-top: 1rem;
    text-align: center;
    font-size: 1.35rem;
}

.kg-card.kg-width-wide {
    width: 100vw;
    max-width: 100%;
}
@media (min-width: 80rem) {
    .kg-card.kg-width-wide {
        margin-top: 4rem;
        margin-bottom: 1rem;
        max-width: 74rem;
    }
}
@media (min-width: 100rem) {
    .kg-card.kg-width-wide {
        max-width: 90rem;
    }
}
@media (min-width: 140rem) {
    .kg-card.kg-width-wide {
        max-width: 130rem;
    }
}
.kg-card.kg-width-wide img {
    max-width: 100%;
}

.kg-card {
    margin-top: 2rem;
    margin-bottom: 0;
}
@media (min-width: 80rem) {
    .kg-card {
        margin-top: 4rem;
        margin-bottom: 2rem;
    }
}

pre {
    overflow-y: hidden;
    margin-top: 2rem;
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
    padding: .8rem 1.2rem;
    width: 100vw;
    max-width: 100%;
    background: #1D1D1D;
    color: #DDDDDD;
    word-wrap: break-word;
    line-height: 2rem;
}
pre code {
    display: block;
    padding: 0;
    background: none;
    color: #DDDDDD;
    font-size: 1.6rem;
    font-family: "Inconsolata", "Courier New";
}

.content a {
    color: black;
    text-decoration: underline;
    -webkit-transition: all .2s;
            transition: all .2s;
}
.content a:hover {
    border-color: black;
    color: black;
}

.content img {
    display: block;
    margin: 0 auto;
    height: auto;
    max-width: 100%;
}

.feed .post {
    position: relative;
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    margin-bottom: 2rem;
    padding: 2rem;
    background-color: #585858;
    background-position: center;
    background-size: cover;
    color: white;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
}
@media (min-width: 55rem) {
    .feed .post {
        padding: 2rem;
        min-height: 25vh;
    }
}
.feed .post a {
    color: inherit;
}
.feed .post.has-image:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .8);
}
@media (min-width: 55rem) {
    .feed .post.has-image:after {
        background: rgba(0, 0, 0, .7);
    }
}
.feed .post .post--top-content {
    position: relative;
    z-index: 20;
    flex: 1;
    max-width: 80rem;

    -webkit-box-flex: 1;
}
.feed .post .post--bottom-content {
    position: relative;
    z-index: 20;
    height: auto;
    max-width: 80rem;
}
.feed .post .post--tags {
    display: block;
    overflow: auto;
    margin-bottom: 1rem;
    width: 100%;
    font-size: 1.2rem;
}
.feed .post .post--tags a {
    display: inline-block;
    float: left;
    margin-right: .3rem;
    margin-bottom: .3rem;
    padding: .6rem;
    border: .1rem solid rgba(255, 255, 255, .6);
    background: transparent;
    color: rgba(255, 255, 255, .6);
    text-transform: uppercase;
    line-height: 1;
}
@media (min-width: 100rem) {
    .feed .post .post--tags a:not(:nth-of-type(1)) {
        opacity: 0;
    }
}
.feed .post .post--tags a:hover {
    background: white;
    color: #252525 !important;
}
.feed .post .post--tags:hover a {
    border-color: white;
    color: white;
}
.feed .post .post--tags:hover a:not(:nth-of-type(1)) {
    display: inline-block;
}
.feed .post:hover .post--tags a:not(:nth-of-type(1)) {
    opacity: 1;
}
.feed .post .post--title {
    margin: 0;
}
.feed .post .post--title a {
    font-size: inherit;
}
.feed .post .post--excerpt {
    margin: 1rem 0;
    max-width: 55rem;
    color: rgba(255, 255, 255, .6);
    font-size: 1.35rem;
}
.feed .post .post--read-time {
    margin-bottom: 1rem;
    color: rgba(255, 255, 255, .6);
    font-size: 1.35rem;
}
.feed .post .post--meta {
    display: block;
    color: rgba(255, 255, 255, .6);
    font-size: 1.35rem;
    line-height: 1.5;
}
.feed .post .post--meta .author {
    color: white;
}
.feed .post .post--meta .author a {
    border-color: transparent;
}
.feed .post .post--meta .author a:hover {
    border-color: white;
}

.feed {
    padding: 2rem;
    padding-bottom: 0;
}

.index {
    background: #F7F7F7;
}
.index .header:not(.cover-image) {
    background: white;
    color: rgba(0, 0, 0, .7);
}
.index .header:not(.cover-image) a {
    color: black;
}

.page-template .main {
    margin: 0 auto;
    width: 100%;
    background: white;
}
.page-template .main .content {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    margin: auto;
    padding: 2rem;
    max-width: 80rem;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-box-align: center;
    align-items: center;
}
@media (min-width: 80rem) {
    .page-template .main .content {
        padding: 4rem;
        max-width: 86rem;
    }
}
.page-template .main .content > * {
    min-width: 100%;
}
.page-template .main .content > *:first-child {
    margin-top: 0;
}
.page-template .main .content > *:last-child {
    margin-bottom: 0;
}

nav.pagination {
    text-align: center;
    line-height: 12rem;
}
nav.pagination .newer-posts, nav.pagination .older-posts {
    color: black;
}
nav.pagination .page-number {
    margin: 0 2rem;
    color: #848484;
}

.post-template .main {
    margin: 0 auto;
    width: 100%;
    background: white;
}
.post-template .main .content {
    display: -webkit-box;
    display: flex;
    flex-direction: column;
    margin: auto;
    padding: 2rem;
    max-width: 84rem;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-box-align: center;
    align-items: center;
}
@media (min-width: 55rem) {
    .post-template .main .content {
        padding: 4rem;
        max-width: 86rem;
    }
}
.post-template .main .content > * {
    min-width: 100%;
}
.post-template .main .content > *:first-child {
    margin-top: 0;
}
.post-template .main .content > *:last-child {
    margin-bottom: 0;
}

.read-more {
    padding: 4rem 0;
    max-height: 100vh;
    background: black;
    color: rgba(255, 255, 255, .7);
}
@media (min-width: 55rem) {
    .read-more {
        padding: 6rem 0;
    }
}
@media (min-width: 100rem) {
    .read-more {
        padding: 8rem 0;
    }
}
.read-more.home {
    background: white;
    color: rgba(0, 0, 0, .7);
}
.read-more.home a {
    color: black;
}
.read-more.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover;
}
.read-more.cover-image:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .7);
}
.read-more:hover {
    color: white;
}
.read-more:hover a {
    color: white;
}
.read-more .hero-content {
    position: relative;
    z-index: 10;
    margin: auto;
    width: calc(100% - 4rem);
    max-width: 80rem;
}
.read-more .hero-content .post-title {
    display: block;
    letter-spacing: -.2rem;
    font-size: calc(3.375rem + 1.875vw);
    line-height: 1.2;
}
.read-more .hero-content p {
    margin-top: 1rem;
    margin-bottom: 1rem;
}
.read-more .hero-content p.read-more-text {
    margin-bottom: 4rem;
    color: rgba(255, 255, 255, .7);
    text-align: center;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 1.35rem;
}

.tag-template .main {
    background: white;
}
.tag-template .main .tag {
    margin: 0 auto;
    max-width: 80rem;
}
.tag-template .main .tag .tag-content > *:first-child {
    margin-top: 0;
}
.tag-template .main .tag .tag-content > *:last-child {
    margin-bottom: 0;
}

.animated {
    -webkit-animation-duration: 1s;
            animation-duration: 1s;

    -webkit-animation-fill-mode: both;
            animation-fill-mode: both;
}

.delay-1 {
    -webkit-animation-delay: .2s;
            animation-delay: .2s;
}

.delay-2 {
    -webkit-animation-delay: .4s;
            animation-delay: .4s;
}

.delay-3 {
    -webkit-animation-delay: .6s;
            animation-delay: .6s;
}

.delay-4 {
    -webkit-animation-delay: .8s;
            animation-delay: .8s;
}

.delay-5 {
    -webkit-animation-delay: 1s;
            animation-delay: 1s;
}

@-webkit-keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}
.fadeIn {
    -webkit-animation-name: fadeIn;
            animation-name: fadeIn;
}

@-webkit-keyframes fadeInUp {
    0% {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
    }
    100% {
        opacity: 1;
        -webkit-transform: none;
                transform: none;
    }
}

@keyframes fadeInUp {
    0% {
        opacity: 0;
        -webkit-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
    }
    100% {
        opacity: 1;
        -webkit-transform: none;
                transform: none;
    }
}
.fadeInUp {
    -webkit-animation-name: fadeInUp;
            animation-name: fadeInUp;
}

/* Deprecated fix for the old way of handling images, just so they don't look terrible */
.content img[src$="#large"], .content img[src$="#full"] {
    margin-left: -2rem;
    width: calc(100% + 4rem);
}
@media (min-width: 100rem) {
    .content img[src$="#large"], .content img[src$="#full"] {
        margin-left: -25%;
        width: 150%;
    }
}
@media (min-width: 140rem) {
    .content img[src$="#large"], .content img[src$="#full"] {
        margin-left: -50%;
        width: 200%;
    }
}

/* Fix for 100vw and horizontal scrollbar */
body {
    overflow-x: hidden;
}

.hidden {
    display: none;
}

@media (min-width: 100rem) {
    .alignleft, .alignright {
        margin-bottom: 2rem;
        padding-bottom: 0;
        width: 30rem;
    }
    .alignleft img, .alignright img {
        margin: 0;
    }

    .alignleft {
        float: left;
        margin-right: 2rem;
        margin-left: -16rem;
    }
    .alignleft q {
        margin: 0;
        width: initial;
        text-align: right;
    }

    blockquote.alignleft {
        padding-right: 2rem;
        padding-left: 0;
        border-right: .4rem solid #DDDDDD;
        border-left: 0;
        text-align: right;
    }

    q.alignleft {
        margin-top: 0;
        text-align: right;
    }

    .alignright {
        float: right;
        margin-right: -16rem;
        margin-left: 2rem;
    }
    .alignright q, .alignrightq {
        margin: 0;
        width: initial;
        text-align: left;
    }

    q.alignright {
        margin: 0;
        text-align: left;
    }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInN0eWxlLnNjc3MiLCItLS0tLS0tc2V0dGluZ3MvYnJlYWtwb2ludHMuc2NzcyIsIi0tLS0tLS1zZXR0aW5ncy9jb2xvcnMuc2NzcyIsIi0tLS0tLS1zZXR0aW5ncy9mb250cy5zY3NzIiwiLS0tLS0tLXNldHRpbmdzL3Jlc3BvbnNpdmUtZm9udC1zY2FsaW5nLnNjc3MiLCItLS0tLWdlbmVyaWMvX3Jlc2V0LnNjc3MiLCItLS0tLWdlbmVyaWMvZ2VuZXJpYy5zY3NzIiwiLS0tLS0tdG9vbHMvbWl4aW5zLnNjc3MiLCItLS0tZWxlbWVudHMvaGVhZGluZ3Muc2NzcyIsIi0tLS0tLS1zZXR0aW5ncy9zaXplcy5zY3NzIiwiLS0tLWVsZW1lbnRzL2xpc3RzLnNjc3MiLCItLS0tZWxlbWVudHMvdHlwb2dyYXBoeS5zY3NzIiwiLS0tb2JqZWN0cy9fZm9vdGVyLnNjc3MiLCItLS1vYmplY3RzL19ncmlkLnNjc3MiLCItLS1vYmplY3RzL19oZWFkZXIuc2NzcyIsIi0tY29tcG9uZW50cy9hdXRob3Iuc2NzcyIsIi0tY29tcG9uZW50cy9ibG9nLW5hdmlnYXRpb24uc2NzcyIsIi0tY29tcG9uZW50cy9jb250ZW50X19jYXJkLWJvb2ttYXJrLnNjc3MiLCItLWNvbXBvbmVudHMvY29udGVudF9fY2FyZC1lbWJlZC5zY3NzIiwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2NhcmQtZnVsbC5zY3NzIiwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2NhcmQtZ2FsbGVyeS5zY3NzIiwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2NhcmQtaW1hZ2Uuc2NzcyIsIi0tY29tcG9uZW50cy9jb250ZW50X19jYXJkLXdpZGUuc2NzcyIsIi0tY29tcG9uZW50cy9jb250ZW50X19jYXJkLnNjc3MiLCItLWNvbXBvbmVudHMvY29udGVudF9fY29kZS1ibG9jay5zY3NzIiwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2Zvcm1hdHRpbmcuc2NzcyIsIi0tY29tcG9uZW50cy9jb250ZW50X19tZWRpYS5zY3NzIiwiLS1jb21wb25lbnRzL2ZlZWRfX3Bvc3Quc2NzcyIsIi0tY29tcG9uZW50cy9mZWVkLnNjc3MiLCItLWNvbXBvbmVudHMvaW5kZXguc2NzcyIsIi0tY29tcG9uZW50cy9wYWdlLnNjc3MiLCItLWNvbXBvbmVudHMvcGFnaW5hdGlvbi5zY3NzIiwiLS1jb21wb25lbnRzL3Bvc3Quc2NzcyIsIi0tY29tcG9uZW50cy9yZWFkLW1vcmUuc2NzcyIsIi0tY29tcG9uZW50cy90YWcuc2NzcyIsIi1vdmVycmlkZXMvYW5pbWF0aW9ucy5zY3NzIiwiLW92ZXJyaWRlcy9maXgub2xkLWltYWdlLXN0eWxlcy5zY3NzIiwiLW92ZXJyaWRlcy9maXguc2Nyb2xsYmFycy5zY3NzIiwiLW92ZXJyaWRlcy9oZWxwZXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FDQWhCOzs7aUJBQUE7QUNBQTs7O3FCQUFBO0FDQUE7OztxQkFBQTtBQ0FBOzs7aUJBQUE7QUNBQSwyQ0FBQTtBQ0FBOzs7Q0FBQTtBQUtBOzs7Ozs7Ozs7Ozs7O0VBYUksU0FBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSx3QkFBQTtBTmtCSjs7QU1oQkEsZ0RBQUE7QUFDQTs7RUFFSSxjQUFBO0FObUJKOztBTWpCQTtFQUNJLGNBQUE7QU5vQko7O0FNbEJBO0VBQ0ksZ0JBQUE7QU5xQko7O0FNbkJBO0VBQ0ksWUFBQTtBTnNCSjs7QU1wQkE7O0VBRUksV0FBQTtFQUNBLGFBQUE7QU51Qko7O0FNckJBO0VBQ0kseUJBQUE7RUFDQSxpQkFBQTtBTndCSjs7QU90RUE7RUFDSSxvQkFBQTtFQUFBLGFBQUE7RUFDQSw0QkFBQTtFQUFBLDZCQUFBO1VBQUEsc0JBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QVB5RUo7O0FPdEVBO0VBQ0ksb0JBQUE7RUFBQSxhQUFBO0VBQ0EsbUJBQUE7VUFBQSxPQUFBO0VBQ0EsNEJBQUE7RUFBQSw2QkFBQTtVQUFBLHNCQUFB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QUNJLGtCQUFBO0VBQ0Esd0JBQUE7QXJDaXJDUjtBUWhyQ1E7RTZCSEo7SUFJUSxXQUFBO0lBQ0EsaUJBQUE7RXJDbXJDVjtBQUNGO0FRdHJDUTtFNkJISjtJQVFRLFdBQUE7SUFDQSxpQkFBQTtFckNxckNWO0FBQ0Y7O0FzQ2xzQ0EsMkNBQUE7QUFFQTtFQUNJLGtCQUFBO0F0Q29zQ0o7O0F1Q3ZzQ0E7RUFDSSxhQUFBO0F2QzBzQ0o7O0FRcnNDUTtFK0JESjtJQUNJLG1CN0JMUztJNkJNVCxpQkFBQTtJQUNBLFlBQUE7RXZDMHNDTjtFdUN6c0NNO0lBQ0ksU0FBQTtFdkMyc0NWOztFdUN4c0NFO0lBQ0ksV0FBQTtJQUNBLGtCN0JkUztJNkJlVCxtQkFBQTtFdkMyc0NOO0V1QzFzQ007SUFDSSxTQUFBO0lBQ0EsY0FBQTtJQUNBLGlCQUFBO0V2QzRzQ1Y7O0V1Q3hzQ0U7SUFDSSxtQjdCcEJVO0k2QnFCVixlQUFBO0lBQ0Esa0NBQUE7SUFDQSxjQUFBO0lBQ0EsaUJBQUE7RXZDMnNDTjs7RXVDeHNDRTtJQUNJLGFBQUE7SUFDQSxpQkFBQTtFdkMyc0NOOztFdUN4c0NFO0lBQ0ksWUFBQTtJQUNBLG9CQUFBO0lBQ0EsaUI3QnZDUztFVmt2Q2Y7RXVDMXNDTTtJQUNJLFNBQUE7SUFDQSxjQUFBO0lBQ0EsZ0JBQUE7RXZDNHNDVjs7RXVDenNDRTtJQUNJLFNBQUE7SUFDQSxnQkFBQTtFdkM0c0NOO0FBQ0YiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyogTUFJTlxuLS0tLS0tLS0tLS0tLS0tXG5JbXBvcnQgYWxsIHJlbGV2YW50IGZpbGVzXG4tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIEJyZWFrcG9pbnRzXG4tLS0tLS0tLS0tLS0tLS0tLS0tXG5CcmVha3BvaW50cyBmb3IgdmFyaW91cyBzY3JlZW4gc2l6ZXNcbi0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIENvbG9yc1xuLS0tLS0tLS0tLS0tLS0tLS0tLVxuQWxsIGNvbG9ycyB1c2VkIHRocm91Z2hvdXQgdGhlIHRoZW1lXG4tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiBGb250c1xuLS0tLS0tLS0tLS0tLS0tXG5Gb250c1xuLS0tLS0tLS0tLS0tLS0tICovXG4vKiBDdXN0b20gcmVzcG9uc2l2ZSBzY2FsaW5nIGZvciBoZWFkaW5ncyAqL1xuLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC9cbiAgIHYyLjAgfCAyMDExMDEyNlxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcbiovXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSwgcSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbmh0bWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG59XG5cbmJvZHkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIGhlaWdodDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBmb250LWZhbWlseTogXCJOb3RvIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuODtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MHJlbSkge1xuICBib2R5IHtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgfVxufVxuYm9keSBtYWluIHtcbiAgZmxleDogMTtcbn1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWZhbWlseTogXCJOb3RvIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbn1cbmgxIGEsIGgyIGEsIGgzIGEsIGg0IGEsIGg1IGEsIGg2IGEge1xuICBib3JkZXI6IDA7XG59XG5cbmgxIHtcbiAgbWFyZ2luLXRvcDogNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbGV0dGVyLXNwYWNpbmc6IC0ycHg7XG4gIGZvbnQtc2l6ZTogY2FsYygzLjZyZW0gKyAydncpO1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogY2FsYygyLjI1cmVtICsgMS4yNXZ3KTtcbn1cblxuaDMge1xuICBmb250LXNpemU6IGNhbGMoMS44cmVtICsgMXZ3KTtcbn1cblxuaDQge1xuICBmb250LXNpemU6IGNhbGMoMS40NHJlbSArIDAuOHZ3KTtcbn1cblxuaDUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IGNhbGMoMS4xNTJyZW0gKyAwLjY0dncpO1xufVxuXG5oNiB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogY2FsYygwLjlyZW0gKyAwLjV2dyk7XG59XG5cbnVsLCBvbCB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogODByZW0pIHtcbiAgdWwsIG9sIHtcbiAgICBtYXJnaW4tdG9wOiA0cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gIH1cbn1cblxudWwge1xuICBtYXJnaW4tbGVmdDogNHJlbTtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogc3F1YXJlO1xufVxudWwgbGkge1xuICBtYXJnaW46IDAgMCAwLjVyZW07XG59XG51bCB1bCwgdWwgb2wge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG5cbm9sIHtcbiAgbWFyZ2luLWxlZnQ6IDRyZW07XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWw7XG59XG5vbCBsaSB7XG4gIG1hcmdpbjogMCAwIDAuNXJlbTtcbn1cbm9sIHVsLCBvbCBvbCB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cblxuYSB7XG4gIGNvbG9yOiBibGFjaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn1cbmE6aG92ZXIge1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbnAsIGJsb2NrcXVvdGUsIGZpZ3VyZSwgY2FudmFzLCBmb3JtIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLm5vdGUge1xuICBwYWRkaW5nOiAxcmVtO1xuICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xufVxuXG5tYXJrIHtcbiAgcGFkZGluZzogMC4ycmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkRGRkI2O1xuICBib3gtc2hhZG93OiAjRkRGRkI2IDAgMCA1cHg7XG59XG5cbnN1cCB7XG4gIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcbiAgZm9udC1zaXplOiAxLjUzcmVtO1xufVxuXG5ibG9ja3F1b3RlIHtcbiAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICBib3JkZXItbGVmdDogNHB4IHNvbGlkICNkZGRkZGQ7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2VyaWZcIiwgc2VyaWY7XG59XG5ibG9ja3F1b3RlIGltZyB7XG4gIG1hcmdpbjogMnJlbSAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxucSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1zaXplOiAyLjI1cmVtO1xuICBmb250LWZhbWlseTogXCJOb3RvIFNlcmlmXCIsIHNlcmlmO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1cmVtKSB7XG4gIHEge1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICBtYXJnaW4tbGVmdDogY2FsYygwJSAtIDJyZW0pO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKyA0cmVtKTtcbiAgICBtYXgtd2lkdGg6IGNhbGMoMTAwJSArIDRyZW0pO1xuICB9XG59XG5xOmJlZm9yZSwgcTphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmNpdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6ICNkZGRkZGQ7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMS40NHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWY7XG59XG5jaXRlIGEge1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuY2l0ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIuKAlOKAiVwiO1xufVxuXG5lbSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbnByZSB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5cbmNvZGUge1xuICBwYWRkaW5nOiAwLjNyZW0gMC42cmVtO1xuICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogMS40NHJlbTtcbiAgZm9udC1mYW1pbHk6IFwiSW5jb25zb2xhdGFcIiwgXCJDb3VyaWVyIE5ld1wiO1xufVxuXG5ociB7XG4gIG1hcmdpbjogMnJlbSAwIDA7XG4gIGhlaWdodDogMC40cmVtO1xuICBib3JkZXI6IDA7XG4gIGJhY2tncm91bmQ6ICNkZGRkZGQ7XG59XG5cbi5mb290ZXIge1xuICBiYWNrZ3JvdW5kOiAjMjUyNTI1O1xuICBjb2xvcjogIzk5OTk5OTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYW5pbWF0aW9uLWRlbGF5OiAxcztcbn1cbi5mb290ZXIgLmNvbG9waG9uIHtcbiAgcGFkZGluZzogNHJlbSAycmVtO1xufVxuLmZvb3RlciAuY29sb3Bob24gc2VjdGlvbiB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDgwcmVtO1xufVxuLmZvb3RlciAuY29sb3Bob24gc2VjdGlvbjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4uZm9vdGVyIC5jb2xvcGhvbiBzZWN0aW9uOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmZvb3RlciAuY29sb3Bob24gc2VjdGlvbiAuZ2hvc3QtbG9nbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgd2lkdGg6IDQuMmVtO1xuICBoZWlnaHQ6IDEuM2VtO1xuICBiYWNrZ3JvdW5kOiAjODQ4NDg0O1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG4gIHRyYW5zaXRpb246IDAuMnMgYWxsIGVhc2U7XG4gIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvZ2hvc3QtbG9nby5zdmcpO1xuICBtYXNrLXNpemU6IGNvbnRhaW47XG4gIG1hc2stcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uZm9vdGVyIC5jb2xvcGhvbiBzZWN0aW9uIC5naG9zdC1sb2dvOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59XG4uZm9vdGVyIC5ib3R0b20ge1xuICBwYWRkaW5nOiAycmVtO1xuICBiYWNrZ3JvdW5kOiAjMWQxZDFkO1xufVxuLmZvb3RlciAuYm90dG9tIHNlY3Rpb24ge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA4MHJlbTtcbn1cbi5mb290ZXIgLmJvdHRvbSBzZWN0aW9uIGEge1xuICBjb2xvcjogIzg0ODQ4NDtcbn1cbi5mb290ZXIgLmJvdHRvbSBzZWN0aW9uIGE6aG92ZXIge1xuICBjb2xvcjogd2hpdGU7XG59XG4uZm9vdGVyIC5ib3R0b20gc2VjdGlvbiBhIGkuZmEuZmEtaGVhcnQge1xuICBjb2xvcjogI2Q4NTE1MTtcbn1cbi5mb290ZXIgYSB7XG4gIGJvcmRlci1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5mb290ZXIgYTpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogd2hpdGU7XG59XG4uZm9vdGVyIC5oZWFydCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEuM2VtO1xuICBoZWlnaHQ6IDEuM2VtO1xuICBiYWNrZ3JvdW5kOiAjRkY0RDRDO1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG4gIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvaGVhcnQuc3ZnKTtcbiAgbWFzay1zaXplOiBjb250YWluO1xuICBtYXNrLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuXG4uZmVlZC5ncmlkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA4MHJlbSkge1xuICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcbiAgICAuZmVlZC5ncmlkIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLWdhcDogMnJlbTtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoNTByZW0sIDFmcikpO1xuICAgICAgZ3JpZC1hdXRvLWZsb3c6IGRlbnNlO1xuICAgIH1cbiAgICAuZmVlZC5ncmlkIC5wb3N0IHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuICAgIC5mZWVkLmdyaWQgLnBvc3QudGFnLWhhc2gtdGFsbCB7XG4gICAgICBtaW4taGVpZ2h0OiA1MHZoO1xuICAgIH1cbiAgICAuZmVlZC5ncmlkIC5wb3N0LmZlYXR1cmVkIHtcbiAgICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7XG4gICAgfVxuICAgIC5mZWVkLmdyaWQgLnBvc3QudGFnLWhhc2gtdGFsbCB7XG4gICAgICBncmlkLXJvdy1lbmQ6IHNwYW4gMjtcbiAgICB9XG4gIH1cbiAgQHN1cHBvcnRzIG5vdCAoZGlzcGxheTogZ3JpZCkge1xuICAgIC5mZWVkLmdyaWQge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgfVxuICAgIC5mZWVkLmdyaWQgLnBvc3Qge1xuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMXJlbSk7XG4gICAgfVxuICAgIC5mZWVkLmdyaWQgLnBvc3Q6bnRoLW9mLXR5cGUoMm4pIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAycmVtO1xuICAgIH1cbiAgfVxufVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogYmxhY2s7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG59XG4uaGVhZGVyIGEge1xuICBjb2xvcjogd2hpdGU7XG59XG4uaGVhZGVyLmNvdmVyLWltYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpO1xufVxuLmhlYWRlci5jb3Zlci1pbWFnZSBhIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuLmhlYWRlci5jb3Zlci1pbWFnZTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1heC1oZWlnaHQ6IDZyZW07XG4gIGxpbmUtaGVpZ2h0OiA2cmVtO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCBhLmJsb2ctdGl0bGUge1xuICBmbG9hdDogbGVmdDtcbiAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICBoZWlnaHQ6IDZyZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCBhLmJsb2ctdGl0bGUgaW1nLmJsb2ctbG9nbyB7XG4gIG1hcmdpbjogMS41cmVtIDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IDNyZW07XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCAuYmxvZy1kZXNjcmlwdGlvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAxcmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1cmVtKSB7XG4gIC5oZWFkZXIgLmhlYWRlci0tdG9wIC5ibG9nLWRlc2NyaXB0aW9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gIH1cbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24ge1xuICBmbG9hdDogcmlnaHQ7XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCBuYXYuYmxvZy1uYXZpZ2F0aW9uIHVsLm5hdiB7XG4gIG1hcmdpbjogMDtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwubmF2IGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmhlYWRlciAuaGVybyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSA2cmVtKTtcbiAgaGVpZ2h0OiA0MHJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA0MHJlbSkge1xuICAuaGVhZGVyIC5oZXJvIHtcbiAgICBoZWlnaHQ6IDUwcmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVyZW0pIHtcbiAgLmhlYWRlciAuaGVybyB7XG4gICAgaGVpZ2h0OiA2MHJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDgwcmVtKSB7XG4gIC5oZWFkZXIgLmhlcm8ge1xuICAgIGhlaWdodDogNzByZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDByZW0pIHtcbiAgLmhlYWRlciAuaGVybyB7XG4gICAgaGVpZ2h0OiA3MHJlbTtcbiAgfVxufVxuLmhlYWRlciAuaGVybyAuaGVyby1jb250ZW50IHtcbiAgbWFyZ2luOiBhdXRvO1xuICBtYXgtd2lkdGg6IDgwcmVtO1xuICB3aWR0aDogY2FsYygxMDAlIC0gNHJlbSk7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogODByZW0pIHtcbiAgLmhlYWRlciAuaGVybyAuaGVyby1jb250ZW50IHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNnJlbSk7XG4gIH1cbn1cbi5oZWFkZXIgLmhlcm8gLmhlcm8tY29udGVudCBwIHtcbiAgbWFyZ2luLXRvcDogMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cbi5oZWFkZXIgLmhlcm8gLmhlcm8tY29udGVudCBoMSB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5oZWFkZXIgLmhlcm8gLmhlcm8tY29udGVudCBoMSBpbWcge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5oZWFkZXIgLmhlcm8gLmhlcm8tY29udGVudCBhIHtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBkb3R0ZWQ7XG59XG4uaGVhZGVyIC5oZXJvIC5oZXJvLWNvbnRlbnQgYTpob3ZlciB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5oZWFkZXIgLmhlcm8gLmhlcm8tY29udGVudCAucG9zdC0tdGFncyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG4uaGVhZGVyIC5oZXJvIC5oZXJvLWNvbnRlbnQgLnBvc3QtLXRhZ3MgYSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi1yaWdodDogMC4zcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjNyZW07XG4gIHBhZGRpbmc6IDAuNnJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG4uaGVhZGVyIC5oZXJvIC5oZXJvLWNvbnRlbnQgLnBvc3QtLXRhZ3MgYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbn1cblxuLmF1dGhvci10ZW1wbGF0ZSAuaGVybyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5hdXRob3ItdGVtcGxhdGUgLmhlcm8gLmF1dGhvci1pbWFnZSB7XG4gIHdpZHRoOiAxMHJlbTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDByZW0pIHtcbiAgLmF1dGhvci10ZW1wbGF0ZSAuaGVybyAuYXV0aG9yLWltYWdlIHtcbiAgICB3aWR0aDogMTVyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NXJlbSkge1xuICAuYXV0aG9yLXRlbXBsYXRlIC5oZXJvIC5hdXRob3ItaW1hZ2Uge1xuICAgIHdpZHRoOiAxNy41cmVtO1xuICB9XG59XG4uYXV0aG9yLXRlbXBsYXRlIC5oZXJvIC5hdXRob3ItZGF0YSBzcGFuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCBuYXYuYmxvZy1uYXZpZ2F0aW9uIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCB7XG4gIG1hcmdpbjogMCAxcmVtIDAgMDtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgZm9udC1zaXplOiAxLjM1cmVtO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaVtjbGFzcyQ9aWNvbl0ge1xuICBtYXJnaW4tcmlnaHQ6IDAuNHJlbTtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGlbY2xhc3MkPWljb25dIC5sYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCBuYXYuYmxvZy1uYXZpZ2F0aW9uIHVsIGxpW2NsYXNzJD1pY29uXSBhOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogLTAuNXJlbTtcbiAgd2lkdGg6IDIuNXJlbTtcbiAgaGVpZ2h0OiAyLjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICM4NDg0ODQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWFzay1zaXplOiBjb250YWluO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaVtjbGFzcyQ9aWNvbl0gYTpob3ZlcjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGkubmF2LWdpdGh1Yi1pY29uIGE6YmVmb3JlIHtcbiAgbWFzay1pbWFnZTogdXJsKC4uL2ltYWdlcy9naXRodWIuc3ZnKTtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGkubmF2LXR3aXR0ZXItaWNvbiBhOmJlZm9yZSB7XG4gIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvdHdpdHRlci5zdmcpO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaS5uYXYtcnNzLWljb24gYTpiZWZvcmUge1xuICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3Jzcy5zdmcpO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaS5uYXYtZmFjZWJvb2staWNvbiBhOmJlZm9yZSB7XG4gIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvZmFjZWJvb2suc3ZnKTtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGkubmF2LWRvd25sb2FkLWljb24gYTpiZWZvcmUge1xuICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2Rvd25sb2FkLnN2Zyk7XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCBuYXYuYmxvZy1uYXZpZ2F0aW9uIHVsIGxpLm5hdi1pbWFnZS1pY29uIGE6YmVmb3JlIHtcbiAgbWFzay1pbWFnZTogdXJsKC4uL2ltYWdlcy9pbWFnZS5zdmcpO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaS5uYXYtdHVtYmxyLWljb24gYTpiZWZvcmUge1xuICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL3R1bWJsci5zdmcpO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaS5uYXYtc3RlYW0taWNvbiBhOmJlZm9yZSB7XG4gIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvc3RlYW0uc3ZnKTtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGkubmF2LWdvb2dsZXBsdXMtaWNvbiBhOmJlZm9yZSB7XG4gIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvZ29vZ2xlLXBsdXMuc3ZnKTtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGkubmF2LWNhbWVyYS1pY29uIGE6YmVmb3JlIHtcbiAgbWFzay1pbWFnZTogdXJsKC4uL2ltYWdlcy9jYW1lcmEuc3ZnKTtcbn1cbi5oZWFkZXIgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGkubmF2LWVtYWlsLWljb24gYTpiZWZvcmUge1xuICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2VtYWlsLnN2Zyk7XG59XG4uaGVhZGVyIC5oZWFkZXItLXRvcCBuYXYuYmxvZy1uYXZpZ2F0aW9uIHVsIGxpLm5hdi10ZWxlZ3JhbS1pY29uIGE6YmVmb3JlIHtcbiAgbWFzay1pbWFnZTogdXJsKC4uL2ltYWdlcy90ZWxlZ3JhbS5zdmcpO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaS5uYXYtY2FtZXJhLWljb24gYTpiZWZvcmUge1xuICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2NhbWVyYS5zdmcpO1xufVxuLmhlYWRlciAuaGVhZGVyLS10b3AgbmF2LmJsb2ctbmF2aWdhdGlvbiB1bCBsaTpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW4tcmlnaHQ6IDFyZW07XG59XG4uaGVhZGVyLmNvdmVyLWltYWdlIC5oZWFkZXItLXRvcCBuYXYuYmxvZy1uYXZpZ2F0aW9uIHVsIGxpW2NsYXNzJD1pY29uXSBhOmJlZm9yZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5rZy1jYXJkLmtnLWJvb2ttYXJrLWNhcmQgLmtnLWJvb2ttYXJrLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGNvbG9yOiAjMjUyNTI1O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDU1cmVtKSB7XG4gIC5rZy1jYXJkLmtnLWJvb2ttYXJrLWNhcmQgLmtnLWJvb2ttYXJrLWNvbnRhaW5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICB9XG59XG4ua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIC5rZy1ib29rbWFyay1jb250YWluZXI6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4ua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIC5rZy1ib29rbWFyay1jb250ZW50IHtcbiAgZmxleC1iYXNpczogMDtcbiAgZmxleC1ncm93OiA5OTk7XG4gIHBhZGRpbmc6IDJyZW07XG4gIG9yZGVyOiAxO1xuICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xufVxuLmtnLWNhcmQua2ctYm9va21hcmstY2FyZCAua2ctYm9va21hcmstdGl0bGUge1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLmtnLWNhcmQua2ctYm9va21hcmstY2FyZCAua2ctYm9va21hcmstbWV0YWRhdGEsXG4ua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIC5rZy1ib29rbWFyay1kZXNjcmlwdGlvbiB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59XG4ua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIC5rZy1ib29rbWFyay1tZXRhZGF0YSB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuLmtnLWNhcmQua2ctYm9va21hcmstY2FyZCAua2ctYm9va21hcmstZGVzY3JpcHRpb24ge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmtnLWNhcmQua2ctYm9va21hcmstY2FyZCAua2ctYm9va21hcmstaWNvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDFyZW07XG4gIGhlaWdodDogMXJlbTtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xuICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4wNXJlbTtcbn1cbi5rZy1jYXJkLmtnLWJvb2ttYXJrLWNhcmQgLmtnLWJvb2ttYXJrLXRodW1ibmFpbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtYmFzaXM6IDI0cmVtO1xuICBmbGV4LWdyb3c6IDE7XG59XG4ua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIC5rZy1ib29rbWFyay10aHVtYm5haWwgaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuLmtnLWNhcmQua2ctYm9va21hcmstY2FyZCAua2ctYm9va21hcmstYXV0aG9yIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4ua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIC5rZy1ib29rbWFyay1wdWJsaXNoZXI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi4oCiXCI7XG4gIG1hcmdpbjogMCAxcmVtO1xufVxuXG4ua2ctY2FyZC5rZy1lbWJlZC1jYXJkIGlmcmFtZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG4ua2ctY2FyZC5rZy1lbWJlZC1jYXJkLnJlc3BvbnNpdmUtdmlkZW8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ua2ctY2FyZC5rZy1lbWJlZC1jYXJkLnJlc3BvbnNpdmUtdmlkZW8gaWZyYW1lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MHJlbSkge1xuICAua2ctY2FyZC5rZy13aWR0aC1mdWxsIHtcbiAgICBtYXJnaW4tdG9wOiA0cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIH1cbn1cbi5rZy1jYXJkLmtnLXdpZHRoLWZ1bGwgaW1nIHtcbiAgbWF4LXdpZHRoOiBub25lO1xuICB3aWR0aDogMTAwdnc7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogNTAlO1xuICByaWdodDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTUwdnc7XG4gIG1hcmdpbi1yaWdodDogLTUwdnc7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4MHJlbSkge1xuICAua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQge1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgfVxufVxuLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbjogMCBhdXRvIDA7XG59XG4ua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQgLmtnLWdhbGxlcnktY29udGFpbmVyIC5rZy1nYWxsZXJ5LXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLmtnLWNhcmQua2ctZ2FsbGVyeS1jYXJkIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciAua2ctZ2FsbGVyeS1yb3c6bm90KDpmaXJzdC1vZi10eXBlKSB7XG4gIG1hcmdpbjogMXJlbSAwIDAgMDtcbn1cbi5rZy1jYXJkLmtnLWdhbGxlcnktY2FyZCAua2ctZ2FsbGVyeS1jb250YWluZXIgLmtnLWdhbGxlcnktcm93IC5rZy1nYWxsZXJ5LWltYWdlOm5vdCg6Zmlyc3Qtb2YtdHlwZSkge1xuICBtYXJnaW46IDAgMCAwIDFyZW07XG59XG4ua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQgLmtnLWdhbGxlcnktY29udGFpbmVyIC5rZy1nYWxsZXJ5LXJvdyAua2ctZ2FsbGVyeS1pbWFnZSBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ua2ctY2FyZC5rZy1pbWFnZS1jYXJkIGZpZ2NhcHRpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMS4zNXJlbTtcbiAgbWFyZ2luLXRvcDogMXJlbTtcbn1cblxuLmtnLWNhcmQua2ctd2lkdGgtd2lkZSB7XG4gIHdpZHRoOiAxMDB2dztcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDgwcmVtKSB7XG4gIC5rZy1jYXJkLmtnLXdpZHRoLXdpZGUge1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBtYXgtd2lkdGg6IDc0cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAwcmVtKSB7XG4gIC5rZy1jYXJkLmtnLXdpZHRoLXdpZGUge1xuICAgIG1heC13aWR0aDogOTByZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNDByZW0pIHtcbiAgLmtnLWNhcmQua2ctd2lkdGgtd2lkZSB7XG4gICAgbWF4LXdpZHRoOiAxMzByZW07XG4gIH1cbn1cbi5rZy1jYXJkLmtnLXdpZHRoLXdpZGUgaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4ua2ctY2FyZCB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogODByZW0pIHtcbiAgLmtnLWNhcmQge1xuICAgIG1hcmdpbi10b3A6IDRyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgfVxufVxuXG5wcmUge1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIHBhZGRpbmc6IDAuOHJlbSAxLjJyZW07XG4gIHdpZHRoOiAxMDB2dztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMWQxZDFkO1xuICBjb2xvcjogI2RkZGRkZDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICBsaW5lLWhlaWdodDogMnJlbTtcbn1cbnByZSBjb2RlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAjZGRkZGRkO1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgZm9udC1mYW1pbHk6IFwiSW5jb25zb2xhdGFcIiwgXCJDb3VyaWVyIE5ld1wiO1xufVxuXG4uY29udGVudCBhIHtcbiAgY29sb3I6IGJsYWNrO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG59XG4uY29udGVudCBhOmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uY29udGVudCBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZmVlZCAucG9zdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgcGFkZGluZzogMnJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU4NTg1ODtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBjb2xvcjogd2hpdGU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVyZW0pIHtcbiAgLmZlZWQgLnBvc3Qge1xuICAgIHBhZGRpbmc6IDJyZW07XG4gICAgbWluLWhlaWdodDogMjV2aDtcbiAgfVxufVxuLmZlZWQgLnBvc3QgYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuLmZlZWQgLnBvc3QuaGFzLWltYWdlOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDEwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuOCk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVyZW0pIHtcbiAgLmZlZWQgLnBvc3QuaGFzLWltYWdlOmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gIH1cbn1cbi5mZWVkIC5wb3N0IC5wb3N0LS10b3AtY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjA7XG4gIG1heC13aWR0aDogODByZW07XG4gIGZsZXg6IDE7XG59XG4uZmVlZCAucG9zdCAucG9zdC0tYm90dG9tLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDIwO1xuICBtYXgtd2lkdGg6IDgwcmVtO1xuICBoZWlnaHQ6IGF1dG87XG59XG4uZmVlZCAucG9zdCAucG9zdC0tdGFncyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuLmZlZWQgLnBvc3QgLnBvc3QtLXRhZ3MgYSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi1yaWdodDogMC4zcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjNyZW07XG4gIHBhZGRpbmc6IDAuNnJlbTtcbiAgYm9yZGVyOiAwLjFyZW0gc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAwcmVtKSB7XG4gIC5mZWVkIC5wb3N0IC5wb3N0LS10YWdzIGE6bm90KDpudGgtb2YtdHlwZSgxKSkge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cbi5mZWVkIC5wb3N0IC5wb3N0LS10YWdzIGE6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgY29sb3I6ICMyNTI1MjUgIWltcG9ydGFudDtcbn1cbi5mZWVkIC5wb3N0IC5wb3N0LS10YWdzOmhvdmVyIGEge1xuICBib3JkZXItY29sb3I6IHdoaXRlO1xuICBjb2xvcjogd2hpdGU7XG59XG4uZmVlZCAucG9zdCAucG9zdC0tdGFnczpob3ZlciBhOm5vdCg6bnRoLW9mLXR5cGUoMSkpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmZlZWQgLnBvc3Q6aG92ZXIgLnBvc3QtLXRhZ3MgYTpub3QoOm50aC1vZi10eXBlKDEpKSB7XG4gIG9wYWNpdHk6IDE7XG59XG4uZmVlZCAucG9zdCAucG9zdC0tdGl0bGUge1xuICBtYXJnaW46IDA7XG59XG4uZmVlZCAucG9zdCAucG9zdC0tdGl0bGUgYSB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cbi5mZWVkIC5wb3N0IC5wb3N0LS1leGNlcnB0IHtcbiAgbWFyZ2luOiAxcmVtIDA7XG4gIG1heC13aWR0aDogNTVyZW07XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XG4gIGZvbnQtc2l6ZTogMS4zNXJlbTtcbn1cbi5mZWVkIC5wb3N0IC5wb3N0LS1yZWFkLXRpbWUge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICBmb250LXNpemU6IDEuMzVyZW07XG59XG4uZmVlZCAucG9zdCAucG9zdC0tbWV0YSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICBmb250LXNpemU6IDEuMzVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG4uZmVlZCAucG9zdCAucG9zdC0tbWV0YSAuYXV0aG9yIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuLmZlZWQgLnBvc3QgLnBvc3QtLW1ldGEgLmF1dGhvciBhIHtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5mZWVkIC5wb3N0IC5wb3N0LS1tZXRhIC5hdXRob3IgYTpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogd2hpdGU7XG59XG5cbi5mZWVkIHtcbiAgcGFkZGluZzogMnJlbTtcbiAgcGFkZGluZy1ib3R0b206IDA7XG59XG5cbi5pbmRleCB7XG4gIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XG59XG4uaW5kZXggLmhlYWRlcjpub3QoLmNvdmVyLWltYWdlKSB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xufVxuLmluZGV4IC5oZWFkZXI6bm90KC5jb3Zlci1pbWFnZSkgYSB7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLnBhZ2UtdGVtcGxhdGUgLm1haW4ge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xufVxuLnBhZ2UtdGVtcGxhdGUgLm1haW4gLmNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXgtd2lkdGg6IDgwcmVtO1xuICBwYWRkaW5nOiAycmVtO1xuICBtYXJnaW46IGF1dG87XG59XG5AbWVkaWEgKG1pbi13aWR0aDogODByZW0pIHtcbiAgLnBhZ2UtdGVtcGxhdGUgLm1haW4gLmNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDRyZW07XG4gICAgbWF4LXdpZHRoOiA4NnJlbTtcbiAgfVxufVxuLnBhZ2UtdGVtcGxhdGUgLm1haW4gLmNvbnRlbnQgPiAqIHtcbiAgbWluLXdpZHRoOiAxMDAlO1xufVxuLnBhZ2UtdGVtcGxhdGUgLm1haW4gLmNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5wYWdlLXRlbXBsYXRlIC5tYWluIC5jb250ZW50ID4gKjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxubmF2LnBhZ2luYXRpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxMnJlbTtcbn1cbm5hdi5wYWdpbmF0aW9uIC5uZXdlci1wb3N0cywgbmF2LnBhZ2luYXRpb24gLm9sZGVyLXBvc3RzIHtcbiAgY29sb3I6IGJsYWNrO1xufVxubmF2LnBhZ2luYXRpb24gLnBhZ2UtbnVtYmVyIHtcbiAgbWFyZ2luOiAwIDJyZW07XG4gIGNvbG9yOiAjODQ4NDg0O1xufVxuXG4ucG9zdC10ZW1wbGF0ZSAubWFpbiB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG59XG4ucG9zdC10ZW1wbGF0ZSAubWFpbiAuY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1heC13aWR0aDogODRyZW07XG4gIHBhZGRpbmc6IDJyZW07XG4gIG1hcmdpbjogYXV0bztcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NXJlbSkge1xuICAucG9zdC10ZW1wbGF0ZSAubWFpbiAuY29udGVudCB7XG4gICAgcGFkZGluZzogNHJlbTtcbiAgICBtYXgtd2lkdGg6IDg2cmVtO1xuICB9XG59XG4ucG9zdC10ZW1wbGF0ZSAubWFpbiAuY29udGVudCA+ICoge1xuICBtaW4td2lkdGg6IDEwMCU7XG59XG4ucG9zdC10ZW1wbGF0ZSAubWFpbiAuY29udGVudCA+ICo6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLnBvc3QtdGVtcGxhdGUgLm1haW4gLmNvbnRlbnQgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ucmVhZC1tb3JlIHtcbiAgcGFkZGluZzogNHJlbSAwO1xuICBtYXgtaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZDogYmxhY2s7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNTVyZW0pIHtcbiAgLnJlYWQtbW9yZSB7XG4gICAgcGFkZGluZzogNnJlbSAwO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAwcmVtKSB7XG4gIC5yZWFkLW1vcmUge1xuICAgIHBhZGRpbmc6IDhyZW0gMDtcbiAgfVxufVxuLnJlYWQtbW9yZS5ob21lIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG59XG4ucmVhZC1tb3JlLmhvbWUgYSB7XG4gIGNvbG9yOiBibGFjaztcbn1cbi5yZWFkLW1vcmUuY292ZXItaW1hZ2Uge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG4ucmVhZC1tb3JlLmNvdmVyLWltYWdlOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcbn1cbi5yZWFkLW1vcmU6aG92ZXIge1xuICBjb2xvcjogd2hpdGU7XG59XG4ucmVhZC1tb3JlOmhvdmVyIGEge1xuICBjb2xvcjogd2hpdGU7XG59XG4ucmVhZC1tb3JlIC5oZXJvLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xuICBtYXJnaW46IGF1dG87XG4gIG1heC13aWR0aDogODByZW07XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA0cmVtKTtcbn1cbi5yZWFkLW1vcmUgLmhlcm8tY29udGVudCAucG9zdC10aXRsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMnJlbTtcbiAgZm9udC1zaXplOiBjYWxjKDMuMzc1cmVtICsgMS44NzV2dyk7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG4ucmVhZC1tb3JlIC5oZXJvLWNvbnRlbnQgcCB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4ucmVhZC1tb3JlIC5oZXJvLWNvbnRlbnQgcC5yZWFkLW1vcmUtdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgbWFyZ2luLWJvdHRvbTogNHJlbTtcbiAgZm9udC1zaXplOiAxLjM1cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4udGFnLXRlbXBsYXRlIC5tYWluIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG4udGFnLXRlbXBsYXRlIC5tYWluIC50YWcge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA4MHJlbTtcbn1cbi50YWctdGVtcGxhdGUgLm1haW4gLnRhZyAudGFnLWNvbnRlbnQgPiAqOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi50YWctdGVtcGxhdGUgLm1haW4gLnRhZyAudGFnLWNvbnRlbnQgPiAqOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uYW5pbWF0ZWQge1xuICBhbmltYXRpb24tZHVyYXRpb246IDFzO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xufVxuXG4uZGVsYXktMSB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC4ycztcbn1cblxuLmRlbGF5LTIge1xuICBhbmltYXRpb24tZGVsYXk6IDAuNHM7XG59XG5cbi5kZWxheS0zIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAwLjZzO1xufVxuXG4uZGVsYXktNCB7XG4gIGFuaW1hdGlvbi1kZWxheTogMC44cztcbn1cblxuLmRlbGF5LTUge1xuICBhbmltYXRpb24tZGVsYXk6IDFzO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbi5mYWRlSW4ge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblVwIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuLmZhZGVJblVwIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xufVxuXG4vKiBEZXByZWNhdGVkIGZpeCBmb3IgdGhlIG9sZCB3YXkgb2YgaGFuZGxpbmcgaW1hZ2VzLCBqdXN0IHNvIHRoZXkgZG9uJ3QgbG9vayB0ZXJyaWJsZSAqL1xuLmNvbnRlbnQgaW1nW3NyYyQ9XCIjbGFyZ2VcIl0sIC5jb250ZW50IGltZ1tzcmMkPVwiI2Z1bGxcIl0ge1xuICBtYXJnaW4tbGVmdDogLTJyZW07XG4gIHdpZHRoOiBjYWxjKDEwMCUgKyA0cmVtKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDByZW0pIHtcbiAgLmNvbnRlbnQgaW1nW3NyYyQ9XCIjbGFyZ2VcIl0sIC5jb250ZW50IGltZ1tzcmMkPVwiI2Z1bGxcIl0ge1xuICAgIHdpZHRoOiAxNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtMjUlO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTQwcmVtKSB7XG4gIC5jb250ZW50IGltZ1tzcmMkPVwiI2xhcmdlXCJdLCAuY29udGVudCBpbWdbc3JjJD1cIiNmdWxsXCJdIHtcbiAgICB3aWR0aDogMjAwJTtcbiAgICBtYXJnaW4tbGVmdDogLTUwJTtcbiAgfVxufVxuXG4vKiBGaXggZm9yIDEwMHZ3IGFuZCBob3Jpem9udGFsIHNjcm9sbGJhciAqL1xuYm9keSB7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDByZW0pIHtcbiAgLmFsaWdubGVmdCwgLmFsaWducmlnaHQge1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgd2lkdGg6IDMwcmVtO1xuICB9XG4gIC5hbGlnbmxlZnQgaW1nLCAuYWxpZ25yaWdodCBpbWcge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIC5hbGlnbmxlZnQge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1yaWdodDogMnJlbTtcbiAgICBtYXJnaW4tbGVmdDogLTE2cmVtO1xuICB9XG4gIC5hbGlnbmxlZnQgcSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHdpZHRoOiBpbml0aWFsO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG5cbiAgYmxvY2txdW90ZS5hbGlnbmxlZnQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIGJvcmRlci1yaWdodDogMC40cmVtIHNvbGlkICNkZGRkZGQ7XG4gICAgYm9yZGVyLWxlZnQ6IDA7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cblxuICBxLmFsaWdubGVmdCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuXG4gIC5hbGlnbnJpZ2h0IHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLXJpZ2h0OiAtMTZyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDJyZW07XG4gIH1cbiAgLmFsaWducmlnaHQgcSwgLmFsaWducmlnaHRxIHtcbiAgICBtYXJnaW46IDA7XG4gICAgd2lkdGg6IGluaXRpYWw7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuXG4gIHEuYWxpZ25yaWdodCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn0iLCIvKiBNQUlOXHJcbi0tLS0tLS0tLS0tLS0tLVxyXG5JbXBvcnQgYWxsIHJlbGV2YW50IGZpbGVzXHJcbi0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuQGltcG9ydCBcIi0tLS0tLS1zZXR0aW5ncy9icmVha3BvaW50cy5zY3NzXCI7XG5AaW1wb3J0IFwiLS0tLS0tLXNldHRpbmdzL2NvbG9ycy5zY3NzXCI7XG5AaW1wb3J0IFwiLS0tLS0tLXNldHRpbmdzL2ZvbnRzLnNjc3NcIjtcbkBpbXBvcnQgXCItLS0tLS0tc2V0dGluZ3MvcmVzcG9uc2l2ZS1mb250LXNjYWxpbmcuc2Nzc1wiO1xuQGltcG9ydCBcIi0tLS0tLS1zZXR0aW5ncy9zaXplcy5zY3NzXCI7XHJcbkBpbXBvcnQgXCItLS0tLS10b29scy9taXhpbnMuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiLS0tLS1nZW5lcmljL19yZXNldC5zY3NzXCI7XG5AaW1wb3J0IFwiLS0tLS1nZW5lcmljL2dlbmVyaWMuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiLS0tLWVsZW1lbnRzL2hlYWRpbmdzLnNjc3NcIjtcbkBpbXBvcnQgXCItLS0tZWxlbWVudHMvbGlzdHMuc2Nzc1wiO1xuQGltcG9ydCBcIi0tLS1lbGVtZW50cy90eXBvZ3JhcGh5LnNjc3NcIjtcclxuQGltcG9ydCBcIi0tLW9iamVjdHMvX2Zvb3Rlci5zY3NzXCI7XG5AaW1wb3J0IFwiLS0tb2JqZWN0cy9fZ3JpZC5zY3NzXCI7XG5AaW1wb3J0IFwiLS0tb2JqZWN0cy9faGVhZGVyLnNjc3NcIjtcclxuQGltcG9ydCBcIi0tY29tcG9uZW50cy9hdXRob3Iuc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9ibG9nLW5hdmlnYXRpb24uc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9jb250ZW50X19jYXJkLWJvb2ttYXJrLnNjc3NcIjtcbkBpbXBvcnQgXCItLWNvbXBvbmVudHMvY29udGVudF9fY2FyZC1lbWJlZC5zY3NzXCI7XG5AaW1wb3J0IFwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2NhcmQtZnVsbC5zY3NzXCI7XG5AaW1wb3J0IFwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2NhcmQtZ2FsbGVyeS5zY3NzXCI7XG5AaW1wb3J0IFwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2NhcmQtaW1hZ2Uuc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9jb250ZW50X19jYXJkLXdpZGUuc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9jb250ZW50X19jYXJkLnNjc3NcIjtcbkBpbXBvcnQgXCItLWNvbXBvbmVudHMvY29udGVudF9fY29kZS1ibG9jay5zY3NzXCI7XG5AaW1wb3J0IFwiLS1jb21wb25lbnRzL2NvbnRlbnRfX2Zvcm1hdHRpbmcuc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9jb250ZW50X19tZWRpYV9fbGlnaHRib3guc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9jb250ZW50X19tZWRpYV9fdmlkZW9zLnNjc3NcIjtcbkBpbXBvcnQgXCItLWNvbXBvbmVudHMvY29udGVudF9fbWVkaWEuc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9mZWVkX19wb3N0LnNjc3NcIjtcbkBpbXBvcnQgXCItLWNvbXBvbmVudHMvZmVlZC5zY3NzXCI7XG5AaW1wb3J0IFwiLS1jb21wb25lbnRzL2luZGV4LnNjc3NcIjtcbkBpbXBvcnQgXCItLWNvbXBvbmVudHMvcGFnZS5zY3NzXCI7XG5AaW1wb3J0IFwiLS1jb21wb25lbnRzL3BhZ2luYXRpb24uc2Nzc1wiO1xuQGltcG9ydCBcIi0tY29tcG9uZW50cy9wb3N0LnNjc3NcIjtcbkBpbXBvcnQgXCItLWNvbXBvbmVudHMvcmVhZC1tb3JlLnNjc3NcIjtcbkBpbXBvcnQgXCItLWNvbXBvbmVudHMvdGFnLnNjc3NcIjtcclxuQGltcG9ydCBcIi1vdmVycmlkZXMvYW5pbWF0aW9ucy5zY3NzXCI7XG5AaW1wb3J0IFwiLW92ZXJyaWRlcy9maXgub2xkLWltYWdlLXN0eWxlcy5zY3NzXCI7XG5AaW1wb3J0IFwiLW92ZXJyaWRlcy9maXguc2Nyb2xsYmFycy5zY3NzXCI7XG5AaW1wb3J0IFwiLW92ZXJyaWRlcy9oZWxwZXJzLnNjc3NcIjtcclxuIiwiLyogQnJlYWtwb2ludHNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5CcmVha3BvaW50cyBmb3IgdmFyaW91cyBzY3JlZW4gc2l6ZXNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuJGh1Z2U6IDE0MHJlbTtcclxuJGxhcmdlOiAxMDByZW07XHJcbiRtZWRpdW06IDgwcmVtO1xyXG4kc21hbGw6IDU1cmVtO1xyXG4kdGlueTogNDByZW07XHJcblxyXG4kYnJlYWtwb2ludHM6IChcclxuICAgICAgICBcImh1Z2VcIjogKG1pbi13aWR0aDogJGh1Z2UpLFxyXG4gICAgICAgIFwibGFyZ2VcIjogKG1pbi13aWR0aDogJGxhcmdlKSxcclxuICAgICAgICBcIm1lZGl1bVwiOiAobWluLXdpZHRoOiAkbWVkaXVtKSxcclxuICAgICAgICBcInNtYWxsXCI6IChtaW4td2lkdGg6ICRzbWFsbCksXHJcbiAgICAgICAgXCJ0aW55XCI6IChtaW4td2lkdGg6ICR0aW55KSxcclxuKTsiLCIvKiBDb2xvcnNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5BbGwgY29sb3JzIHVzZWQgdGhyb3VnaG91dCB0aGUgdGhlbWVcclxuLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuJGNvbG9yLS10cmFuc3BhcmVudC1ibGFjazogcmdiYSgwLDAsMCwuOCk7XHJcbiRjb2xvci0tdmVyeS1saWdodC1ncmV5OiAjZjdmN2Y3O1xyXG4kY29sb3ItLWxpZ2h0LWdyZXk6ICNkZGRkZGQ7XHJcbiRjb2xvci0tZ3JleTogIzg0ODQ4NDtcclxuJGNvbG9yLS1tZWRpdW0tZ3JleTogIzU4NTg1ODtcclxuJGNvbG9yLS1kYXJrLWdyZXk6ICMyNTI1MjU7XHJcbiRjb2xvci0tdmVyeS1kYXJrLWdyZXk6ICMxZDFkMWQ7XHJcblxyXG4kY29sb3ItLW1hcmtlci15ZWxsb3c6ICNGREZGQjY7XHJcbiRjb2xvci0taGVhcnR5LXJlZDogcmdiKDIxNiwgODEsIDgxKTtcclxuIiwiLyogRm9udHNcclxuLS0tLS0tLS0tLS0tLS0tXHJcbkZvbnRzXHJcbi0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuJGZvbnQtLXNhbnMtc2VyaWY6IFwiTm90byBTYW5zXCIsIHNhbnMtc2VyaWY7XHJcbiRmb250LS1zZXJpZjogXCJOb3RvIFNlcmlmXCIsIHNlcmlmO1xyXG4kZm9udC0tbW9ub3NwYWNlOiBcIkluY29uc29sYXRhXCIsIFwiQ291cmllciBOZXdcIjtcclxuXHJcbiRmb250LWhlYWRpbmc6ICRmb250LS1zYW5zLXNlcmlmO1xyXG5cclxuJGZvbnQtc2l6ZTogMS44cmVtO1xyXG4kZm9udC1zaXplLS1zbWFsbDogJGZvbnQtc2l6ZSAqIC43NSIsIi8qIEN1c3RvbSByZXNwb25zaXZlIHNjYWxpbmcgZm9yIGhlYWRpbmdzICovXHJcblxyXG4kc2NhbGUtbXVsdGlwbGllci0xOiAyO1xyXG4kc2NhbGUtbXVsdGlwbGllci0yOiAxLjI1O1xyXG4kc2NhbGUtbXVsdGlwbGllci0zOiAxO1xyXG4kc2NhbGUtbXVsdGlwbGllci00OiAwLjg7XHJcbiRzY2FsZS1tdWx0aXBsaWVyLTU6IC42NDtcclxuJHNjYWxlLW11bHRpcGxpZXItNjogLjU7XHJcblxyXG4kZm9udC1zaXplLS1oZWFkaW5nLTE6ICRmb250LXNpemUgKiAkc2NhbGUtbXVsdGlwbGllci0xO1xyXG4kZm9udC1zaXplLS1oZWFkaW5nLTI6ICRmb250LXNpemUgKiAkc2NhbGUtbXVsdGlwbGllci0yO1xyXG4kZm9udC1zaXplLS1oZWFkaW5nLTM6ICRmb250LXNpemUgKiAkc2NhbGUtbXVsdGlwbGllci0zO1xyXG4kZm9udC1zaXplLS1oZWFkaW5nLTQ6ICRmb250LXNpemUgKiAkc2NhbGUtbXVsdGlwbGllci00O1xyXG4kZm9udC1zaXplLS1oZWFkaW5nLTU6ICRmb250LXNpemUgKiAkc2NhbGUtbXVsdGlwbGllci01O1xyXG4kZm9udC1zaXplLS1oZWFkaW5nLTY6ICRmb250LXNpemUgKiAkc2NhbGUtbXVsdGlwbGllci02O1xyXG5cclxuJGJhc2Utc2NhbGluZzogMXZ3O1xyXG5cclxuJHNjYWxpbmctLWhlYWRpbmctMTogJGJhc2Utc2NhbGluZyAqICRzY2FsZS1tdWx0aXBsaWVyLTE7XHJcbiRzY2FsaW5nLS1oZWFkaW5nLTI6ICRiYXNlLXNjYWxpbmcgKiAkc2NhbGUtbXVsdGlwbGllci0yO1xyXG4kc2NhbGluZy0taGVhZGluZy0zOiAkYmFzZS1zY2FsaW5nICogJHNjYWxlLW11bHRpcGxpZXItMztcclxuJHNjYWxpbmctLWhlYWRpbmctNDogJGJhc2Utc2NhbGluZyAqICRzY2FsZS1tdWx0aXBsaWVyLTQ7XHJcbiRzY2FsaW5nLS1oZWFkaW5nLTU6ICRiYXNlLXNjYWxpbmcgKiAkc2NhbGUtbXVsdGlwbGllci01O1xyXG4kc2NhbGluZy0taGVhZGluZy02OiAkYmFzZS1zY2FsaW5nICogJHNjYWxlLW11bHRpcGxpZXItNjsiLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xyXG4gICB2Mi4wIHwgMjAxMTAxMjZcclxuICAgTGljZW5zZTogbm9uZSAocHVibGljIGRvbWFpbilcclxuKi9cclxuXHJcbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxyXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXHJcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcclxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcclxuYiwgdSwgaSwgY2VudGVyLFxyXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxyXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcclxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXHJcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxyXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsXHJcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxyXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxuICAgIGZvbnQ6IGluaGVyaXQ7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xyXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxyXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuYm9keSB7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxufVxyXG5vbCwgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5ibG9ja3F1b3RlLCBxIHtcclxuICAgIHF1b3Rlczogbm9uZTtcclxufVxyXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcclxucTpiZWZvcmUsIHE6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBjb250ZW50OiBub25lO1xyXG59XHJcbnRhYmxlIHtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXItc3BhY2luZzogMDtcclxufSIsImh0bWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZm9udC1zaXplOiA2Mi41JTtcbn1cblxuYm9keSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGNvbG9yOiAkY29sb3ItLXRyYW5zcGFyZW50LWJsYWNrO1xuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZTtcbiAgICBmb250LWZhbWlseTogJGZvbnQtLXNhbnMtc2VyaWY7XG4gICAgbGluZS1oZWlnaHQ6IDEuODtcblxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8odGlueSkge1xuICAgICAgICBmb250LXNpemU6ICRmb250LXNpemU7XG4gICAgfVxuXG4gICAgbWFpbiB7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgfVxufVxuXG4qIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufSIsIi8vLyBSZXNwb25zaXZlIG1hbmFnZXIuXHJcbi8vLyBAYWNjZXNzIHB1YmxpY1xyXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRicmVha3BvaW50IC0gQnJlYWtwb2ludFxyXG4vLy8gQHJlcXVpcmVzICRicmVha3BvaW50c1xyXG5AbWl4aW4gcmVzcG9uZC10bygkYnJlYWtwb2ludCkge1xyXG4gICAgQGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQpIHtcclxuICAgICAgICBAbWVkaWEgI3tpbnNwZWN0KG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkpfSB7XHJcbiAgICAgICAgICAgIEBjb250ZW50O1xyXG4gICAgICAgIH1cclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICAgIEBlcnJvciAnTm8gdmFsdWUgZm91bmQgZm9yIGAjeyRicmVha3BvaW50fWAuICdcclxuICAgICAgICAgICAgICsgJ1BsZWFzZSBtYWtlIHN1cmUgaXQgaXMgZGVmaW5lZCBpbiBgJGJyZWFrcG9pbnRzYCBtYXAuJztcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGNhbGMoJHByb3BlcnR5LCAkZXhwcmVzc2lvbil7XHJcbiAgICAjeyRwcm9wZXJ0eX06IGNhbGMoI3skZXhwcmVzc2lvbn0pO1xyXG59IiwiaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XHJcbiAgICBtYXJnaW46ICB7XHJcbiAgICAgICAgdG9wOiAkbWFyZ2luLS1tZWRpdW07XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1oZWFkaW5nO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcclxuICAgIGEge1xyXG4gICAgICAgIGJvcmRlcjogMDtcclxuICAgIH1cclxufVxyXG5cclxuaDEge1xyXG4gICAgbWFyZ2luOiAge1xyXG4gICAgICAgIHRvcDogJG1hcmdpbi0tbGFyZ2U7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgbGV0dGVyLXNwYWNpbmc6IC0ycHg7XHJcbiAgICBmb250LXNpemU6IGNhbGMoI3skZm9udC1zaXplLS1oZWFkaW5nLTF9ICsgI3skc2NhbGluZy0taGVhZGluZy0xfSk7XHJcbn1cclxuaDIge1xyXG4gICAgZm9udC1zaXplOiBjYWxjKCN7JGZvbnQtc2l6ZS0taGVhZGluZy0yfSArICN7JHNjYWxpbmctLWhlYWRpbmctMn0pO1xyXG59XHJcblxyXG5oMyB7XHJcbiAgICBmb250LXNpemU6IGNhbGMoI3skZm9udC1zaXplLS1oZWFkaW5nLTN9ICsgI3skc2NhbGluZy0taGVhZGluZy0zfSk7XHJcbn1cclxuaDQge1xyXG4gICAgZm9udC1zaXplOiBjYWxjKCN7JGZvbnQtc2l6ZS0taGVhZGluZy00fSArICN7JHNjYWxpbmctLWhlYWRpbmctNH0pO1xyXG59XHJcbmg1IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBmb250LXNpemU6IGNhbGMoI3skZm9udC1zaXplLS1oZWFkaW5nLTV9ICsgI3skc2NhbGluZy0taGVhZGluZy01fSk7XHJcbn1cclxuaDYge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc2l6ZTogY2FsYygjeyRmb250LXNpemUtLWhlYWRpbmctNn0gKyAjeyRzY2FsaW5nLS1oZWFkaW5nLTZ9KTtcclxufSIsIiRtYXJnaW4tLXNtYWxsOiAxcmVtO1xyXG4kbWFyZ2luLS1tZWRpdW06IDJyZW07XHJcbiRtYXJnaW4tLWxhcmdlOiA0cmVtO1xyXG5cclxuJHBhZGRpbmctLXNtYWxsOiAxcmVtO1xyXG4kcGFkZGluZy0tbWVkaXVtOiAycmVtO1xyXG4kcGFkZGluZy0tbGFyZ2U6IDRyZW07XHJcblxyXG4kd3JhcHBlci13aWR0aDogODByZW07XHJcbiRndXR0ZXI6ICRtYXJnaW4tLW1lZGl1bTsiLCJ1bCwgb2wge1xyXG4gICAgbWFyZ2luLXRvcDogJG1hcmdpbi0tbWVkaXVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuXHJcbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKG1lZGl1bSkge1xyXG4gICAgICAgIG1hcmdpbi10b3A6ICRtYXJnaW4tLWxhcmdlO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRtYXJnaW4tLW1lZGl1bTtcclxuICAgIH1cclxufVxyXG5cclxudWwge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDRyZW07XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbGlzdC1zdHlsZTogc3F1YXJlO1xyXG4gICAgbGkge1xyXG4gICAgICAgIG1hcmdpbjogMCAwICRtYXJnaW4tLXNtYWxsLzI7XHJcbiAgICB9XHJcbiAgICB1bCwgb2wge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tc21hbGwvMjtcclxuICAgIH1cclxufVxyXG5cclxub2wge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDRyZW07XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbGlzdC1zdHlsZTogZGVjaW1hbDtcclxuICAgIGxpIHtcclxuICAgICAgICBtYXJnaW46IDAgMCAkbWFyZ2luLS1zbWFsbC8yO1xyXG4gICAgfVxyXG4gICAgdWwsIG9sIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRtYXJnaW4tLXNtYWxsLzI7XHJcbiAgICB9XHJcbn0iLCJhIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMnM7XG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XG4gICAgICAgIGNvbG9yOiBibGFjaztcbiAgICB9XG59XG5cbnAsIGJsb2NrcXVvdGUsIGZpZ3VyZSwgY2FudmFzLCBmb3JtIHtcbiAgICBtYXJnaW46ICB7XG4gICAgICAgIHRvcDogJG1hcmdpbi0tbWVkaXVtO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbn1cblxuLm5vdGUge1xuICAgIHBhZGRpbmc6ICRtYXJnaW4tLXNtYWxsO1xuICAgIGJhY2tncm91bmQ6ICRjb2xvci0tdmVyeS1saWdodC1ncmV5O1xufVxuXG5tYXJrIHtcbiAgICBwYWRkaW5nOiAuMnJlbTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLW1hcmtlci15ZWxsb3c7XG4gICAgYm94LXNoYWRvdzogJGNvbG9yLS1tYXJrZXIteWVsbG93IDAgMCA1cHg7XG59XG5cbnN1cCB7XG4gICAgdmVydGljYWwtYWxpZ246IHN1cGVyO1xuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZSAqIC44NTtcbn1cblxuYmxvY2txdW90ZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAkbWFyZ2luLS1tZWRpdW07XG4gICAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAkY29sb3ItLWxpZ2h0LWdyZXk7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LS1zZXJpZjtcbiAgICBpbWcge1xuICAgICAgICBtYXJnaW46ICRtYXJnaW4tLW1lZGl1bSAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG59XG5cbnEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgZm9udC1zaXplOiAkZm9udC1zaXplICogMS4yNTtcbiAgICBmb250LWZhbWlseTogJGZvbnQtLXNlcmlmO1xuXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xuICAgICAgICBtYXJnaW4tdG9wOiAkbWFyZ2luLS1sYXJnZTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tbWVkaXVtO1xuICAgICAgICBtYXJnaW4tbGVmdDogY2FsYygwJSAtICN7JG1hcmdpbi0tbWVkaXVtfSk7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAjeyRtYXJnaW4tLWxhcmdlfSk7XG4gICAgICAgIG1heC13aWR0aDogY2FsYygxMDAlICsgI3skbWFyZ2luLS1sYXJnZX0pO1xuICAgIH1cbiAgICAmOmJlZm9yZSwgJjphZnRlciB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG5jaXRlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb2xvcjogJGNvbG9yLS1saWdodC1ncmV5O1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUgKiAuODtcbiAgICBmb250LWZhbWlseTogJGZvbnQtLXNhbnMtc2VyaWY7XG4gICAgYSB7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgfVxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcXDIwMTQgXFwyMDA5XCI7XG4gICAgfVxufVxuXG5lbSB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5zdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5wcmUge1xuICAgIG1hcmdpbi10b3A6ICRtYXJnaW4tLW1lZGl1bTtcbn1cblxuY29kZSB7XG4gICAgcGFkZGluZzogLjNyZW0gLjZyZW07XG4gICAgYmFja2dyb3VuZDogJGNvbG9yLS12ZXJ5LWxpZ2h0LWdyZXk7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZSAqIC44O1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC0tbW9ub3NwYWNlO1xufVxuXG5ociB7XG4gICAgbWFyZ2luOiAkbWFyZ2luLS1tZWRpdW0gMCAwO1xuICAgIGhlaWdodDogLjRyZW07XG4gICAgYm9yZGVyOiAwO1xuICAgIGJhY2tncm91bmQ6ICRjb2xvci0tbGlnaHQtZ3JleTtcbn0iLCIuZm9vdGVyIHtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvci0tZGFyay1ncmV5O1xyXG4gICAgY29sb3I6IGRhcmtlbih3aGl0ZSwgNDAlKTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IDFzO1xyXG5cclxuXHJcbiAgICAuY29sb3Bob24ge1xyXG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLS1sYXJnZSAkcGFkZGluZy0tbWVkaXVtO1xyXG4gICAgICAgIHNlY3Rpb24ge1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aDtcclxuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZ2hvc3QtbG9nbyB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDQuMmVtO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxLjNlbTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci0tZ3JleTtcclxuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4ycyBhbGwgZWFzZTtcclxuICAgICAgICAgICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvZ2hvc3QtbG9nby5zdmcpO1xyXG4gICAgICAgICAgICAgICAgbWFzay1zaXplOiBjb250YWluO1xyXG4gICAgICAgICAgICAgICAgbWFzay1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmJvdHRvbSB7XHJcbiAgICAgICAgcGFkZGluZzogJHBhZGRpbmctLW1lZGl1bTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3ItLXZlcnktZGFyay1ncmV5O1xyXG4gICAgICAgIHNlY3Rpb24ge1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aDtcclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLS1ncmV5O1xyXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaS5mYS5mYS1oZWFydCB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvci0taGVhcnR5LXJlZDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGEge1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5oZWFydCB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxLjNlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuM2VtO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNGRjRENEM7XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xyXG4gICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvaGVhcnQuc3ZnKTtcclxuICAgICAgICBtYXNrLXNpemU6IGNvbnRhaW47XHJcbiAgICAgICAgbWFzay1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIH1cclxufSIsIi5mZWVkLmdyaWQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICBAc3VwcG9ydHMoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgICAgICBncmlkLWdhcDogJGd1dHRlcjtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCg1MHJlbSwxZnIpKTtcclxuICAgICAgICAgICAgZ3JpZC1hdXRvLWZsb3c6IGRlbnNlO1xyXG4gICAgICAgICAgICAucG9zdCB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgJi50YWctaGFzaC10YWxsIHtcclxuICAgICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiA1MHZoO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJi5mZWF0dXJlZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICYudGFnLWhhc2gtdGFsbCB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1yb3ctZW5kOiBzcGFuIDI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgQHN1cHBvcnRzIG5vdCAoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICAucG9zdCB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogY2FsYyg1MCUgLSAxcmVtKTtcclxuICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMm4pIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogJGd1dHRlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIiRoZWFkZXItaGVpZ2h0OiA2cmVtO1xyXG5cclxuLmhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcclxuICAgIGNvbG9yOiByZ2JhKHdoaXRlLCAuNyk7XHJcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbiAgICAmLmNvdmVyLWltYWdlIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgY29sb3I6IHJnYmEod2hpdGUsIC43KTtcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoYmxhY2ssIC43KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmhlYWRlci0tdG9wIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgei1pbmRleDogMTA7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgbWF4LWhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRoZWFkZXItaGVpZ2h0O1xyXG5cclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYS5ibG9nLXRpdGxlIHtcclxuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogJHBhZGRpbmctLW1lZGl1bTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgaW1nLmJsb2ctbG9nbyB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46ICRoZWFkZXItaGVpZ2h0LzQgMDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQvMjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmJsb2ctZGVzY3JpcHRpb24ge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbmF2LmJsb2ctbmF2aWdhdGlvbiB7XHJcbiAgICAgICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgICAgICAgdWwubmF2IHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmhlcm8ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAxMDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtICN7JGhlYWRlci1oZWlnaHR9KTtcclxuICAgICAgICBoZWlnaHQ6IDQwcmVtO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKHRpbnkpIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MHJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDYwcmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKG1lZGl1bSkge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDcwcmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKGxhcmdlKSB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNzByZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuaGVyby1jb250ZW50IHtcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6ICR3cmFwcGVyLXdpZHRoO1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gNHJlbSk7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2JhKHdoaXRlLC43KTtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8obWVkaXVtKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gI3skaGVhZGVyLWhlaWdodH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaDEge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKHdoaXRlLC43KTtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogZG90dGVkO1xyXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAucG9zdC0tdGFncyB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogJG1hcmdpbi0tbWVkaXVtO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAuM3JlbTtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuM3JlbTtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNnJlbTtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LC42KTtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuNik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5hdXRob3ItdGVtcGxhdGUge1xyXG4gICAgLmhlcm8ge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAuYXV0aG9yLWltYWdlIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwcmVtO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tbWVkaXVtO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKHRpbnkpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxNXJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKHNtYWxsKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTcuNXJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmF1dGhvci1kYXRhIHtcclxuICAgICAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRtYXJnaW4tLXNtYWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAubWFpbiB7XHJcblxyXG4gICAgfVxyXG59IiwiLmhlYWRlciB7XHJcbiAgICAuaGVhZGVyLS10b3Age1xyXG4gICAgICAgIG5hdi5ibG9nLW5hdmlnYXRpb24ge1xyXG4gICAgICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICAgICAgICAgIHVsIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMCAkbWFyZ2luLS1zbWFsbCAwIDA7XHJcbiAgICAgICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogJG1hcmdpbi0tc21hbGw7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplKi43NTtcclxuICAgICAgICAgICAgICAgICAgICAmW2NsYXNzJD1cImljb25cIl0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC40cmVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAubGFiZWwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAtLjVyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIuNXJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDIuNXJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLWdyZXk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2stc2l6ZTogY29udGFpbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmOmhvdmVyOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJi5uYXYtZ2l0aHViLWljb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2dpdGh1Yi5zdmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICYubmF2LXR3aXR0ZXItaWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGE6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvdHdpdHRlci5zdmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICYubmF2LXJzcy1pY29uIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYTpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFzay1pbWFnZTogdXJsKC4uL2ltYWdlcy9yc3Muc3ZnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAmLm5hdi1mYWNlYm9vay1pY29uIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYTpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFzay1pbWFnZTogdXJsKC4uL2ltYWdlcy9mYWNlYm9vay5zdmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICYubmF2LWRvd25sb2FkLWljb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2Rvd25sb2FkLnN2Zyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJi5uYXYtaW1hZ2UtaWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGE6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvaW1hZ2Uuc3ZnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAmLm5hdi10dW1ibHItaWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGE6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvdHVtYmxyLnN2Zyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJi5uYXYtc3RlYW0taWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGE6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvc3RlYW0uc3ZnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAmLm5hdi1nb29nbGVwbHVzLWljb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2dvb2dsZS1wbHVzLnN2Zyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJi5uYXYtY2FtZXJhLWljb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2NhbWVyYS5zdmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICYubmF2LWVtYWlsLWljb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXNrLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2VtYWlsLnN2Zyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJi5uYXYtdGVsZWdyYW0taWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGE6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvdGVsZWdyYW0uc3ZnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAmLm5hdi1jYW1lcmEtaWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGE6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hc2staW1hZ2U6IHVybCguLi9pbWFnZXMvY2FtZXJhLnN2Zyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6ICRtYXJnaW4tLXNtYWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICYuY292ZXItaW1hZ2UgLmhlYWRlci0tdG9wIG5hdi5ibG9nLW5hdmlnYXRpb24gdWwgbGlbY2xhc3MkPVwiaWNvblwiXSBhOmJlZm9yZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbn0iLCIua2ctY2FyZC5rZy1ib29rbWFyay1jYXJkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgIC5rZy1ib29rbWFyay1jb250YWluZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBjb2xvcjogJGNvbG9yLS1kYXJrLWdyZXk7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAua2ctYm9va21hcmstY29udGFpbmVyOmhvdmVyIHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLmtnLWJvb2ttYXJrLWNvbnRlbnQge1xyXG4gICAgICAgIGZsZXgtYmFzaXM6IDA7XHJcbiAgICAgICAgZmxleC1ncm93OiA5OTk7XHJcbiAgICAgICAgcGFkZGluZzogJHBhZGRpbmctLW1lZGl1bTtcclxuICAgICAgICBvcmRlcjogMTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3ItLXZlcnktbGlnaHQtZ3JleTtcclxuICAgIH1cclxuXHJcbiAgICAua2ctYm9va21hcmstdGl0bGUge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmtnLWJvb2ttYXJrLW1ldGFkYXRhLFxyXG4gICAgLmtnLWJvb2ttYXJrLWRlc2NyaXB0aW9uIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAkbWFyZ2luLS1zbWFsbDtcclxuICAgIH1cclxuXHJcbiAgICAua2ctYm9va21hcmstbWV0YWRhdGEge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgfVxyXG5cclxuICAgIC5rZy1ib29rbWFyay1kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XHJcbiAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAgICAgICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIH1cclxuXHJcbiAgICAua2ctYm9va21hcmstaWNvbiB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxcmVtO1xyXG4gICAgICAgIGhlaWdodDogMXJlbTtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNXJlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuMDVyZW07XHJcbiAgICB9XHJcblxyXG4gICAgLmtnLWJvb2ttYXJrLXRodW1ibmFpbCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWJhc2lzOiAyNHJlbTtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICB9XHJcblxyXG4gICAgLmtnLWJvb2ttYXJrLXRodW1ibmFpbCBpbWcge1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIH1cclxuXHJcbiAgICAua2ctYm9va21hcmstYXV0aG9yIHtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgLmtnLWJvb2ttYXJrLXB1Ymxpc2hlcjo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcIuKAolwiO1xyXG4gICAgICAgIG1hcmdpbjogMCAkbWFyZ2luLS1zbWFsbDtcclxuICAgIH1cclxufSIsIi5rZy1jYXJkLmtnLWVtYmVkLWNhcmQge1xyXG4gICAgaWZyYW1lIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgJi5yZXNwb25zaXZlLXZpZGVvIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgIGlmcmFtZSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5rZy1jYXJkLmtnLXdpZHRoLWZ1bGwge1xyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAkbWFyZ2luLS1sYXJnZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAkbWFyZ2luLS1zbWFsbDtcclxuICAgIH1cclxuICAgIGltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiBub25lO1xyXG4gICAgICAgIHdpZHRoOiAxMDB2dztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHJpZ2h0OiA1MCU7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC01MHZ3O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogLTUwdnc7XHJcbiAgICB9XHJcbn0iLCIua2ctY2FyZC5rZy1nYWxsZXJ5LWNhcmQge1xyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAkbWFyZ2luLS1sYXJnZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAkbWFyZ2luLS1zbWFsbDtcclxuICAgIH1cclxuICAgIC5rZy1nYWxsZXJ5LWNvbnRhaW5lciB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvIDA7XHJcblxyXG4gICAgICAgIC5rZy1nYWxsZXJ5LXJvdyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgJjpub3QoOmZpcnN0LW9mLXR5cGUpIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogJG1hcmdpbi0tc21hbGwgMCAwIDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmtnLWdhbGxlcnktaW1hZ2Uge1xyXG4gICAgICAgICAgICAgICAgJjpub3QoOmZpcnN0LW9mLXR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgMCAwICRtYXJnaW4tLXNtYWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmtnLWNhcmQua2ctaW1hZ2UtY2FyZCB7XHJcblxyXG4gICAgZmlnY2FwdGlvbiB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS0tc21hbGw7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogJG1hcmdpbi0tc21hbGw7XHJcbiAgICB9XHJcbn0iLCIua2ctY2FyZC5rZy13aWR0aC13aWRlIHtcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8obWVkaXVtKSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogJG1hcmdpbi0tbGFyZ2U7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tc21hbGw7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aCAtIDZyZW07XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSByZXNwb25kLXRvKGxhcmdlKSB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aCArIDEwcmVtO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhodWdlKSB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aCArIDUwcmVtO1xyXG4gICAgfVxyXG5cclxuICAgIGltZyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59IiwiLmtnLWNhcmQge1xyXG4gICAgbWFyZ2luLXRvcDogJG1hcmdpbi0tbWVkaXVtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8obWVkaXVtKSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogJG1hcmdpbi0tbGFyZ2U7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tbWVkaXVtO1xyXG4gICAgfVxyXG59IiwicHJlIHtcbiAgICBvdmVyZmxvdy15OiBoaWRkZW47XG4gICAgbWFyZ2luOiAge1xuICAgICAgICB0b3A6ICRtYXJnaW4tLW1lZGl1bTtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICB9XG4gICAgcGFkZGluZzogLjhyZW0gMS4ycmVtO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogJGNvbG9yLS12ZXJ5LWRhcmstZ3JleTtcbiAgICBjb2xvcjogJGNvbG9yLS1saWdodC1ncmV5O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBsaW5lLWhlaWdodDogMnJlbTtcbiAgICBjb2RlIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICAgIGNvbG9yOiAkY29sb3ItLWxpZ2h0LWdyZXk7XG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtLW1vbm9zcGFjZTtcbiAgICB9XG59IiwiLmNvbnRlbnQge1xyXG4gICAgYSB7XHJcbiAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAuMnM7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuY29udGVudCB7XHJcbiAgICBpbWcge1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbn0iLCIuZmVlZCB7XHJcbiAgICAucG9zdCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRndXR0ZXI7XHJcbiAgICAgICAgcGFkZGluZzogJHBhZGRpbmctLW1lZGl1bTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLW1lZGl1bS1ncmV5O1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byh0aW55KSB7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogJHBhZGRpbmctLW1lZGl1bTtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogMjV2aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICB9XHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQmxhY2sgb3ZlcmxheVxyXG4gICAgICAgICYuaGFzLWltYWdlOmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC44KTtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucG9zdC0tdG9wLWNvbnRlbnQge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDIwO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6ICRtZWRpdW07XHJcbiAgICAgICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5wb3N0LS1ib3R0b20tY29udGVudCB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMjA7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogJG1lZGl1bTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBvc3QtLXRhZ3Mge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRtYXJnaW4tLXNtYWxsO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC4zcmVtO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogLjNyZW07XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNnJlbTtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogLjFyZW0gc29saWQgcmdiYSgyNTUsMjU1LDI1NSwuNik7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC42KTtcclxuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTtcclxuXHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKGxhcmdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJjpub3QoOm50aC1vZi10eXBlKDEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvci0tZGFyay1ncmV5ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGE6bm90KDpudGgtb2YtdHlwZSgxKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVyIC5wb3N0LS10YWdzIGEge1xyXG4gICAgICAgICAgICAmOm5vdCg6bnRoLW9mLXR5cGUoMSkpIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb3N0LS10aXRsZSB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8odGlueSkge1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlc3BvbmQtdG8oc21hbGwpIHtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKG1lZGl1bSkge1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucG9zdC0tZXhjZXJwdCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogJG1hcmdpbi0tc21hbGwgMDtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAkc21hbGw7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC42KTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAkZm9udC1zaXplLS1zbWFsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wb3N0LS1yZWFkLXRpbWUge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkbWFyZ2luLS1zbWFsbDtcclxuICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjYpO1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtLXNtYWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBvc3QtLW1ldGEge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjYpO1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRmb250LXNpemUtLXNtYWxsO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgICAgICAgICAuYXV0aG9yIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmZlZWQge1xyXG4gICAgcGFkZGluZzogJGd1dHRlcjtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG59IiwiLmluZGV4IHtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvci0tdmVyeS1saWdodC1ncmV5O1xyXG4gICAgLmhlYWRlcjpub3QoLmNvdmVyLWltYWdlKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgY29sb3I6IHJnYmEoYmxhY2ssIC43KTtcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5wYWdlLXRlbXBsYXRlIC5tYWluIHtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAuY29udGVudCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aDtcclxuICAgICAgICBwYWRkaW5nOiAkcGFkZGluZy0tbWVkaXVtO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhtZWRpdW0pIHtcclxuICAgICAgICAgICAgcGFkZGluZzogJHBhZGRpbmctLWxhcmdlO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6ICR3cmFwcGVyLXdpZHRoICsgNnJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgPiAqIHtcclxuICAgICAgICAgICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgPiAqOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgPiAqOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIm5hdi5wYWdpbmF0aW9uIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMnJlbTtcclxuICAgIC5uZXdlci1wb3N0cywgLm9sZGVyLXBvc3RzIHtcclxuICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICB9XHJcblxyXG4gICAgLnBhZ2UtbnVtYmVyIHtcclxuICAgICAgICBtYXJnaW46IDAgJG1hcmdpbi0tbWVkaXVtO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3ItLWdyZXk7XHJcbiAgICB9XHJcbn0iLCIucG9zdC10ZW1wbGF0ZSAubWFpbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgLmNvbnRlbnQge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIG1heC13aWR0aDogJHdyYXBwZXItd2lkdGggKyA0cmVtO1xyXG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLS1tZWRpdW07XHJcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKHNtYWxsKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLS1sYXJnZTtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aCArIDZyZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgID4gKiB7XHJcbiAgICAgICAgICAgIG1pbi13aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgID4gKjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgID4gKjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIucmVhZC1tb3JlIHtcclxuICAgIHBhZGRpbmc6ICRwYWRkaW5nLS1sYXJnZSAwO1xyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCl7XHJcbiAgICAgICAgcGFkZGluZzogJHBhZGRpbmctLWxhcmdlKjEuNSAwO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgcmVzcG9uZC10byhsYXJnZSl7XHJcbiAgICAgICAgcGFkZGluZzogJHBhZGRpbmctLWxhcmdlKjIgMDtcclxuICAgIH1cclxuICAgIG1heC1oZWlnaHQ6IDEwMHZoO1xyXG4gICAgYmFja2dyb3VuZDogYmxhY2s7XHJcbiAgICBjb2xvcjogcmdiYSh3aGl0ZSwgLjcpO1xyXG4gICAgJi5ob21lIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgICAgICBjb2xvcjogcmdiYShibGFjaywgLjcpO1xyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi5jb3Zlci1pbWFnZSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGJsYWNrO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgei1pbmRleDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYShibGFjaywgLjcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmhlcm8tY29udGVudCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDEwO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICBtYXgtd2lkdGg6ICR3cmFwcGVyLXdpZHRoO1xyXG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAjeyRtYXJnaW4tLWxhcmdlfSk7XHJcbiAgICAgICAgLnBvc3QtdGl0bGUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC0uMnJlbTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBjYWxjKCN7JGZvbnQtc2l6ZS0taGVhZGluZy0yKjEuNX0gKyAjeyRzY2FsaW5nLS1oZWFkaW5nLTIqMS41fSk7IC8vIFNsaWdodGx5IGxhcmdlciB0aGFuIEgyXHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHAge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAkbWFyZ2luLS1zbWFsbDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tc21hbGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwLnJlYWQtbW9yZS10ZXh0IHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBjb2xvcjogcmdiYSh3aGl0ZSwgMC43KTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tbGFyZ2U7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGZvbnQtc2l6ZS0tc21hbGw7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbn0iLCIudGFnLXRlbXBsYXRlIC5tYWluIHtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgLnRhZyB7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgbWF4LXdpZHRoOiAkd3JhcHBlci13aWR0aDtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgcmVzcG9uZC10byhzbWFsbCkge1xyXG4gICAgICAgIH1cclxuICAgICAgICAudGFnLWNvbnRlbnQge1xyXG4gICAgICAgICAgICA+ICo6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICA+ICo6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmFuaW1hdGVkIHtcclxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xyXG59XHJcblxyXG4uZGVsYXktMSB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC4ycztcclxufVxyXG4uZGVsYXktMiB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC40cztcclxufVxyXG4uZGVsYXktMyB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC42cztcclxufVxyXG4uZGVsYXktNCB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IC44cztcclxufVxyXG4uZGVsYXktNSB7XHJcbiAgICBhbmltYXRpb24tZGVsYXk6IDFzO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbn1cclxuLmZhZGVJbiB7XHJcbiAgICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJblVwIHtcclxuICAgIDAlIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwxMDAlLDApO1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuLmZhZGVJblVwIHtcclxuICAgIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcclxufSIsIi8qIERlcHJlY2F0ZWQgZml4IGZvciB0aGUgb2xkIHdheSBvZiBoYW5kbGluZyBpbWFnZXMsIGp1c3Qgc28gdGhleSBkb24ndCBsb29rIHRlcnJpYmxlICovXHJcblxyXG4uY29udGVudCB7XHJcbiAgICBpbWdbc3JjJD1cIiNsYXJnZVwiXSwgaW1nW3NyYyQ9XCIjZnVsbFwiXSB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0kbWFyZ2luLS1tZWRpdW07XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSArICN7JG1hcmdpbi0tbGFyZ2V9KTtcclxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKGxhcmdlKXtcclxuICAgICAgICAgICAgd2lkdGg6IDE1MCU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMjUlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAaW5jbHVkZSByZXNwb25kLXRvKGh1Z2Upe1xyXG4gICAgICAgICAgICB3aWR0aDogMjAwJTtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC01MCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLyogRml4IGZvciAxMDB2dyBhbmQgaG9yaXpvbnRhbCBzY3JvbGxiYXIgKi9cclxuXHJcbmJvZHkge1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG59IiwiLmhpZGRlbiB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG5AaW5jbHVkZSByZXNwb25kLXRvKGxhcmdlKSB7XHJcbiAgICAuYWxpZ25sZWZ0LCAuYWxpZ25yaWdodCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJG1hcmdpbi0tbWVkaXVtO1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG4gICAgICAgIHdpZHRoOiAzMHJlbTtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmFsaWdubGVmdCB7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkbWFyZ2luLS1tZWRpdW07XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0xNnJlbTtcclxuICAgICAgICBxIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogaW5pdGlhbDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGJsb2NrcXVvdGUuYWxpZ25sZWZ0IHtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkcGFkZGluZy0tbWVkaXVtO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgICAgICBib3JkZXItcmlnaHQ6IC40cmVtIHNvbGlkICRjb2xvci0tbGlnaHQtZ3JleTtcclxuICAgICAgICBib3JkZXItbGVmdDogMDtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIH1cclxuXHJcbiAgICBxLmFsaWdubGVmdCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIH1cclxuXHJcbiAgICAuYWxpZ25yaWdodCB7XHJcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogLTE2cmVtO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAkbWFyZ2luLS1tZWRpdW07XHJcbiAgICAgICAgcSwgJnEge1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiBpbml0aWFsO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHEuYWxpZ25yaWdodCB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcbn0iXX0= */
