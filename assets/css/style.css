@charset "UTF-8";
/* MAIN
---------------
Import all relevant files
--------------- */
/* Breakpoints
-------------------
Breakpoints for various screen sizes
------------------- */
/* Colors
-------------------
All defined colors used throughout the theme
------------------- */
/* Color variables
-------------------
Actual variables used
------------------- */
/* Fonts
---------------
Fonts
--------------- */
/* Custom responsive scaling for headings */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  padding: 0;
  border: 0;
  margin: 0;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

body {
  line-height: 1; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

html {
  display: flex;
  height: 100%;
  flex-direction: column;
  font-size: 62.5%; }

body {
  display: flex;
  height: 100%;
  min-height: 100%;
  flex: 1;
  flex-direction: column;
  background: white;
  color: rgba(0, 0, 0, 0.8);
  font-family: "Noto Sans", sans-serif;
  font-size: 1.6rem;
  overflow-y: scroll; }
  body main {
    flex: 1; }

* {
  box-sizing: border-box; }

@font-face {
  font-family: "Noto Sans";
  font-style: normal;
  font-weight: 400;
  src: url(../fonts/NotoSans-Regular.woff2) format("woff2"), url(../NotoSans-Regular.woff) format("woff"); }

@font-face {
  font-family: "Noto Sans";
  font-style: normal;
  font-weight: 500;
  src: url(../fonts/NotoSans-Medium.woff2) format("woff2"), url(../NotoSans-Medium.woff) format("woff"); }

@font-face {
  font-family: "Noto Sans";
  font-style: normal;
  font-weight: 700;
  src: url(../fonts/NotoSans-Bold.woff2) format("woff2"), url(../NotoSans-Bold.woff) format("woff"); }

@font-face {
  font-family: "Noto Serif";
  font-style: normal;
  font-weight: 400;
  src: url(../fonts/NotoSerif-Regular.woff2) format("woff2"), url(../NotoSerif-Regular.woff) format("woff"); }

@font-face {
  font-family: "Noto Serif";
  font-style: italic;
  font-weight: 400;
  src: url(../fonts/NotoSerif-Italic.woff2) format("woff2"), url(../NotoSerif-Italic.woff) format("woff"); }

@font-face {
  font-family: "Noto Serif";
  font-style: normal;
  font-weight: 700;
  src: url(../fonts/NotoSerif-Bold.woff2) format("woff2"), url(../NotoSerif-Bold.woff) format("woff"); }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 1em;
  margin-bottom: 0;
  font-family: "Noto Sans", sans-serif;
  font-weight: 500;
  line-height: 1.2; }
  h1 a,
  h2 a,
  h3 a,
  h4 a,
  h5 a,
  h6 a {
    border: 0; }

h1 {
  font-size: calc(3.2rem + 2vw);
  letter-spacing: -2px; }

h2 {
  font-size: calc(2rem + 1.25vw);
  font-weight: 500; }

h3 {
  font-size: calc(1.6rem + 1vw);
  font-weight: 500; }

h4 {
  font-size: calc(1.28rem + 0.8vw);
  font-weight: 500; }

h5 {
  font-size: calc(1.024rem + 0.64vw);
  font-weight: 500; }

h6 {
  font-size: calc(0.8rem + 0.5vw);
  font-weight: 700; }

a {
  color: #33f;
  text-decoration: none;
  transition: all .2s; }
  a:hover, a:focus {
    text-decoration: underline; }
  a:visited {
    color: #90c; }

ul,
ol {
  padding: 0;
  padding-left: 1.2em;
  margin-top: 0.75rem;
  margin-bottom: 0; }
  @media (min-width: 50em) {
    ul,
    ol {
      margin-top: 1.5rem; } }
  ul li,
  ol li {
    margin: 0 0 0.375rem; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-top: 0;
    margin-bottom: 0.375rem; }

ul {
  list-style: square; }

ol {
  list-style: decimal; }

body {
  line-height: 1.5; }

p,
blockquote,
figure,
canvas,
form {
  margin-top: 1.5rem;
  margin-right: 0;
  margin-bottom: 0;
  margin-left: 0; }

.note {
  padding: 1rem;
  background: #f7f7f7; }

mark {
  padding: 0.2rem;
  background-color: #fdffb6;
  box-shadow: #fdffb6 0 0 5px; }

sup {
  font-size: 1.36rem;
  vertical-align: super; }

blockquote {
  padding-left: 1rem;
  border-left: 0.4rem solid #c9c9c9;
  font-family: "Noto Serif", serif; }
  blockquote img {
    width: 100%;
    margin: 1.5rem 0; }

q {
  display: block;
  font-family: "Noto Serif", serif;
  font-size: 2rem;
  font-style: italic;
  text-align: center; }
  @media (min-width: 35em) {
    q {
      width: calc(100% + 3rem);
      max-width: calc(100% + 3rem);
      margin-top: 3rem;
      margin-bottom: 1.5rem;
      margin-left: calc(0% - 1.5rem); } }
  q:before, q:after {
    display: none; }

cite {
  display: block;
  color: #c9c9c9;
  font-family: "Noto Sans", sans-serif;
  font-size: 1.28rem;
  font-style: normal;
  text-transform: capitalize; }
  cite a {
    border: none;
    color: inherit; }
  cite:before {
    content: "\2014 \2009"; }

em {
  font-style: italic; }

strong {
  font-weight: 700; }

pre {
  margin-top: 1.5rem; }

code {
  padding: 0.3rem 0.6rem;
  background: #f7f7f7;
  color: black;
  font-family: "Inconsolata", "Courier New";
  font-size: 1.28rem; }

hr {
  height: .4rem;
  border: 0;
  margin: 1.5rem 0 0;
  background: #c9c9c9; }

.footer {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 4rem 2rem;
  -webkit-animation-delay: 1s;
          animation-delay: 1s;
  background: #252525;
  color: #c9c9c9;
  text-transform: uppercase; }
  .footer a {
    border-bottom: 1px dotted #c9c9c9;
    color: #c9c9c9;
    text-decoration: none; }
    .footer a:visited {
      color: #c9c9c9; }
    .footer a:hover, .footer a:focus {
      border-bottom: 1px solid white;
      color: white; }
  .footer .button {
    display: inline-block;
    padding: 0.8rem 1.2rem;
    border: 0;
    background: #848484;
    border-radius: 2px;
    color: rgba(0, 0, 0, 0.8); }
    .footer .button:hover, .footer .button:focus {
      border: 0;
      background: white;
      color: rgba(0, 0, 0, 0.8); }
  .footer > :not(:last-child) {
    margin-bottom: 3rem; }
  .footer .footer-navigation {
    width: 100%;
    max-width: 80rem; }
  .footer .colophon {
    width: 100%;
    max-width: 80rem; }
    .footer .colophon:first-child {
      margin-top: 0; }
    .footer .colophon:last-child {
      margin-bottom: 0; }
    .footer .colophon .ghost-logo {
      display: inline-block;
      width: 4.2em;
      height: 1.3em;
      margin-top: .1rem;
      margin-left: .4rem;
      background: #c9c9c9;
      -webkit-mask-image: url(../images/ghost-logo.svg);
              mask-image: url(../images/ghost-logo.svg);
      -webkit-mask-repeat: no-repeat;
              mask-repeat: no-repeat;
      -webkit-mask-size: contain;
              mask-size: contain;
      transition: .2s all ease;
      vertical-align: text-top; }
      .footer .colophon .ghost-logo:hover, .footer .colophon .ghost-logo:focus {
        background-color: white; }

.feed.grid {
  display: flex;
  flex-direction: column; }
  @media (min-width: 35em) {
    @supports (display: grid) {
      .feed.grid {
        display: -ms-grid;
        display: grid;
        grid-auto-flow: dense;
        grid-gap: 1.5rem;
        grid-template-columns: repeat(auto-fit, minmax(50rem, 1fr)); }
        .feed.grid .post {
          margin-bottom: 0; }
          .feed.grid .post.tag-hash-tall {
            min-height: 50vh;
            -ms-grid-row-span: 2;
            grid-row-end: span 2; }
          .feed.grid .post.featured {
            -ms-grid-column-span: 2;
            grid-column: span 2; } }
    @supports not (display: grid) {
      .feed.grid {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap; }
        .feed.grid .post {
          width: calc(50% - 1rem); }
          .feed.grid .post:nth-of-type(2n) {
            margin-left: 1.5rem; } } }

.header {
  flex: 1;
  background: black;
  color: #c9c9c9; }
  .header a {
    color: white; }
  .header.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover; }
    .header.cover-image:after {
      position: absolute;
      z-index: 0;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7);
      content: ""; }
  .header.-dark {
    color: #c9c9c9; }
    .header.-dark a {
      color: white; }
  .header.-light {
    color: #252525; }
    .header.-light a {
      color: black; }
    .header.-light .header--top a.blog-title img.blog-logo {
      filter: invert(1); }
  .header .header--top {
    position: relative;
    z-index: 10;
    display: flex;
    overflow: hidden;
    max-height: 6rem;
    flex-direction: row;
    justify-content: space-between;
    font-size: 1.4rem;
    line-height: 6rem; }
    .header .header--top a.blog-title {
      height: 6rem;
      padding-right: 0.75rem;
      padding-left: 1.5rem;
      float: left;
      font-weight: 600; }
      .header .header--top a.blog-title img.blog-logo {
        width: auto;
        height: 3rem;
        padding: 0;
        margin: 1.5rem 0; }
      .header .header--top a.blog-title:hover, .header .header--top a.blog-title:focus {
        background: #1d1d1d;
        color: white;
        text-decoration: none; }
    .header .header--top .blog-description {
      display: none; }
      @media (min-width: 25em) {
        .header .header--top .blog-description {
          display: inline; } }
    .header .header--top .primary-menu {
      float: right; }
      .header .header--top .primary-menu ul.nav {
        margin: 0; }
        .header .header--top .primary-menu ul.nav li {
          display: inline-block; }
  .header .hero {
    position: relative;
    z-index: 10;
    display: flex;
    height: 40rem;
    max-height: calc(100vh - 6rem);
    flex-direction: column; }
    @media (min-width: 25em) {
      .header .hero {
        height: 50rem; } }
    @media (min-width: 35em) {
      .header .hero {
        height: 60rem; } }
    @media (min-width: 50em) {
      .header .hero {
        height: 70rem; } }
    @media (min-width: 62.5em) {
      .header .hero {
        height: 70rem; } }
    .header .hero .hero-content {
      width: calc(100% - 4rem);
      max-width: 80rem;
      margin: auto;
      color: #c9c9c9; }
      @media (min-width: 50em) {
        .header .hero .hero-content {
          width: calc(100% - 6rem); } }
      .header .hero .hero-content p {
        margin-top: 0.75rem;
        margin-bottom: 0.75rem; }
      .header .hero .hero-content h1 {
        margin-top: 0;
        color: white; }
        .header .hero .hero-content h1 img {
          width: 100%;
          max-width: 40rem; }
      .header .hero .hero-content a {
        border-bottom: 1px dotted #c9c9c9;
        color: #c9c9c9; }
        .header .hero .hero-content a:hover, .header .hero .hero-content a:focus {
          border-bottom: 1px solid white;
          color: white;
          text-decoration: none; }
      .header .hero .hero-content .post--tags {
        display: block;
        overflow: auto;
        width: 100%;
        padding: 0;
        margin-top: 0.75rem;
        list-style: none; }
        .header .hero .hero-content .post--tags li {
          display: inline-block; }
        .header .hero .hero-content .post--tags a {
          display: block;
          padding: .6rem;
          border: 1px solid rgba(255, 255, 255, 0.6);
          margin-right: .3rem;
          margin-bottom: .3rem;
          background: transparent;
          color: rgba(255, 255, 255, 0.6);
          float: left;
          font-size: 1.4rem;
          line-height: 1;
          text-transform: uppercase; }
          .header .hero .hero-content .post--tags a:hover, .header .hero .hero-content .post--tags a:focus {
            background: white;
            color: rgba(0, 0, 0, 0.8) !important;
            text-decoration: none; }

.author-template .hero {
  text-align: center; }
  .author-template .hero .author-image {
    width: 10rem;
    height: auto;
    margin-bottom: 1.5rem;
    border-radius: 50%; }
    @media (min-width: 25em) {
      .author-template .hero .author-image {
        width: 15rem; } }
    @media (min-width: 35em) {
      .author-template .hero .author-image {
        width: 17.5rem; } }
  .author-template .hero .author-data span {
    display: block;
    margin-bottom: 0.75rem; }

.kg-card.kg-bookmark-card {
  position: relative;
  width: 100%; }
  .kg-card.kg-bookmark-card .kg-bookmark-container {
    display: flex;
    flex-direction: column;
    color: #252525;
    font-family: inherit;
    text-decoration: none; }
    @media (min-width: 35em) {
      .kg-card.kg-bookmark-card .kg-bookmark-container {
        flex-direction: row-reverse; } }
  .kg-card.kg-bookmark-card .kg-bookmark-container:hover,
  .kg-card.kg-bookmark-card .kg-bookmark-container:focus {
    text-decoration: none; }
  .kg-card.kg-bookmark-card .kg-bookmark-content {
    flex-basis: 0;
    flex-grow: 999;
    order: 1;
    padding: 2rem;
    background: #f7f7f7; }
  .kg-card.kg-bookmark-card .kg-bookmark-title {
    font-weight: 600; }
  .kg-card.kg-bookmark-card .kg-bookmark-metadata,
  .kg-card.kg-bookmark-card .kg-bookmark-description {
    margin-top: 0.75rem; }
  .kg-card.kg-bookmark-card .kg-bookmark-metadata {
    overflow: hidden;
    align-items: center;
    text-overflow: ellipsis;
    white-space: nowrap; }
  .kg-card.kg-bookmark-card .kg-bookmark-description {
    display: -webkit-box;
    overflow: hidden; }
  .kg-card.kg-bookmark-card .kg-bookmark-icon {
    display: inline-block;
    width: 1.3em;
    height: 1.3em;
    margin-right: 1rem;
    margin-bottom: .3rem;
    vertical-align: text-bottom; }
  .kg-card.kg-bookmark-card span.kg-bookmark-publisher:before {
    content: none; }
  .kg-card.kg-bookmark-card .kg-bookmark-thumbnail {
    display: flex;
    flex-basis: 24rem;
    flex-grow: 1; }
  .kg-card.kg-bookmark-card .kg-bookmark-thumbnail img {
    max-width: 100%;
    height: auto;
    -o-object-fit: cover;
       object-fit: cover;
    vertical-align: bottom; }
  .kg-card.kg-bookmark-card .kg-bookmark-author {
    display: none; }
  .kg-card.kg-bookmark-card .kg-bookmark-publisher:before {
    margin: 0 .4em;
    content: "–"; }

pre {
  width: 100vw;
  max-width: 100%;
  padding: 0.8rem 1.2rem;
  background: #1d1d1d;
  color: #c9c9c9;
  line-height: 2rem;
  overflow-y: hidden;
  word-wrap: break-word;
  margin-top: 1.5rem;
  margin-right: 0;
  margin-bottom: 0;
  margin-left: 0; }
  pre code {
    display: block;
    padding: 0;
    background: none;
    color: #c9c9c9;
    font-family: "Inconsolata", "Courier New"; }

.kg-card.kg-embed-card iframe {
  width: 100%;
  height: auto; }

.kg-card.kg-embed-card.responsive-video {
  position: relative; }
  .kg-card.kg-embed-card.responsive-video iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

@media (min-width: 50em) {
  .kg-card.kg-width-full {
    margin-top: 3rem;
    margin-bottom: 0.75rem; } }

.kg-card.kg-width-full img {
  position: relative;
  right: 50%;
  left: 50%;
  width: 100vw;
  max-width: none;
  margin-right: -50vw;
  margin-left: -50vw; }

@media (min-width: 50em) {
  .kg-card.kg-gallery-card {
    margin-top: 3rem;
    margin-bottom: 0.75rem; } }

.kg-card.kg-gallery-card .kg-gallery-container {
  display: flex;
  flex-direction: column;
  margin: 0 auto 0; }
  .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row {
    display: flex;
    flex-direction: row;
    justify-content: center; }
    .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row:not(:first-of-type) {
      margin: 0.75rem 0 0 0; }
    .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image:not(:first-of-type) {
      margin: 0 0 0 0.75rem; }
    .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image img {
      display: block;
      width: 100%;
      height: 100%;
      margin: 0; }

.kg-card.kg-image-card {
  width: 100%; }
  .kg-card.kg-image-card img {
    min-height: 5rem; }
  .kg-card.kg-image-card figcaption {
    margin-top: 0.75rem;
    font-family: "Noto Serif", serif;
    text-align: center; }

.kg-card {
  margin-top: 1.5rem;
  margin-bottom: 0; }
  @media (min-width: 50em) {
    .kg-card {
      margin-top: 3rem;
      margin-bottom: 1.5rem; } }

.kg-card.kg-width-wide {
  width: 100vw;
  max-width: 100%; }
  @media (min-width: 50em) {
    .kg-card.kg-width-wide {
      max-width: 80rem;
      margin-top: 3rem;
      margin-bottom: 0.75rem; } }
  @media (min-width: 62.5em) {
    .kg-card.kg-width-wide {
      max-width: 90rem; } }
  @media (min-width: 87.5em) {
    .kg-card.kg-width-wide {
      max-width: 120rem; } }
  .kg-card.kg-width-wide img {
    width: 100%; }

.content a {
  color: #33f;
  transition: all .2s; }
  .content a:hover, .content a:focus {
    text-decoration: underline; }
  .content a:visited {
    color: #90c; }

.content > * {
  width: 100%; }

.content img {
  position: relative;
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto;
  margin: 0 auto;
  line-height: 2;
  text-align: center; }
  .content img:before {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    border: 2px dotted #848484;
    background-color: #f7f7f7;
    content: " "; }
  .content img:after {
    position: absolute;
    top: 50%;
    left: 0;
    display: block;
    width: 100%;
    color: #252525;
    content: "Broken image of " attr(alt);
    line-height: 1.2;
    text-align: center;
    transform: translateY(-50%); }

.feed .post {
  position: relative;
  display: flex;
  overflow: hidden;
  flex-direction: column;
  padding: 2rem;
  margin-bottom: 1.5rem;
  background-color: #585858;
  background-position: center;
  background-size: cover;
  color: white; }
  @media (min-width: 35em) {
    .feed .post {
      min-height: 25vh;
      padding: 2rem; } }
  .feed .post a {
    color: inherit; }
  .feed .post.has-image:after {
    position: absolute;
    z-index: 10;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    content: ""; }
    @media (min-width: 35em) {
      .feed .post.has-image:after {
        background: rgba(0, 0, 0, 0.7); } }
  .feed .post .post--top-content {
    position: relative;
    z-index: 20;
    max-width: 50em;
    flex: 1; }
  .feed .post .post--bottom-content {
    position: relative;
    z-index: 20;
    max-width: 50em;
    height: auto; }
  .feed .post .post--tags {
    display: block;
    overflow: auto;
    width: 100%;
    margin-bottom: 0.75rem;
    font-size: 1.2rem; }
    .feed .post .post--tags a {
      display: inline-block;
      padding: .6rem;
      border: 0.1rem solid rgba(255, 255, 255, 0.6);
      margin-right: .3rem;
      margin-bottom: .3rem;
      background: transparent;
      color: rgba(255, 255, 255, 0.6);
      float: left;
      font-size: 1.4rem;
      line-height: 1;
      text-transform: uppercase; }
      @media (min-width: 62.5em) {
        .feed .post .post--tags a:not(:nth-of-type(1)) {
          opacity: 0; } }
      .feed .post .post--tags a:hover, .feed .post .post--tags a:focus {
        background: white;
        color: #252525 !important;
        text-decoration: none; }
    .feed .post .post--tags:hover a, .feed .post .post--tags:focus a {
      border-color: white;
      color: white; }
    .feed .post .post--tags:hover a:not(:nth-of-type(1)), .feed .post .post--tags:focus a:not(:nth-of-type(1)) {
      display: inline-block; }
  .feed .post:hover .post--tags a:not(:nth-of-type(1)),
  .feed .post:focus .post--tags a:not(:nth-of-type(1)) {
    opacity: 1; }
  .feed .post .post--title {
    margin: 0; }
    .feed .post .post--title a {
      font-size: inherit; }
  .feed .post .post--excerpt {
    max-width: 35em;
    margin: 0.75rem 0;
    font-size: 1.4rem; }
  .feed .post .post--read-time {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    font-size: 1.4rem; }
  .feed .post .post--meta {
    display: block;
    font-size: 1.4rem;
    line-height: 1.5; }
    .feed .post .post--meta .author a {
      border-color: transparent; }
      .feed .post .post--meta .author a:hover, .feed .post .post--meta .author a:focus {
        border-color: white; }

.feed {
  padding: 1.5rem;
  padding-bottom: 0; }

.index {
  background: #f7f7f7; }
  .index .header:not(.cover-image) {
    background: white;
    color: rgba(0, 0, 0, 0.7); }
    .index .header:not(.cover-image) a {
      color: black; }

.page-template .main {
  width: 100%;
  margin: 0 auto;
  background: white; }
  .page-template .main .content {
    display: flex;
    max-width: 84rem;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    margin: auto; }
    @media (min-width: 35em) {
      .page-template .main .content {
        padding: 4rem 2rem; } }
    @media (min-width: 50em) {
      .page-template .main .content {
        max-width: 86rem;
        padding: 4rem; } }
    .page-template .main .content > *:first-child {
      margin-top: 0; }
    .page-template .main .content > *:last-child {
      margin-bottom: 0; }

nav.pagination {
  line-height: 12rem;
  text-align: center; }
  nav.pagination .newer-posts,
  nav.pagination .older-posts {
    color: black; }
  nav.pagination .page-number {
    margin: 0 1.5rem;
    color: #252525; }

.read-more {
  max-height: 100vh;
  padding: 4rem 0;
  background: black;
  color: white; }
  .read-more:visited {
    color: white; }
  @media (min-width: 35em) {
    .read-more {
      padding: 6rem 0; } }
  @media (min-width: 62.5em) {
    .read-more {
      padding: 8rem 0; } }
  .read-more.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover; }
    .read-more.cover-image:after {
      position: absolute;
      z-index: 0;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7);
      content: ""; }
  .read-more .hero-content {
    position: relative;
    z-index: 10;
    width: calc(100% - 3rem);
    max-width: 80rem;
    margin: auto; }
    .read-more .hero-content .post-title {
      display: block;
      color: white;
      font-size: calc(3rem + 1.875vw);
      letter-spacing: -.2rem;
      line-height: 1.2; }
      .read-more .hero-content .post-title:visited {
        color: white; }
    .read-more .hero-content p {
      margin-top: 0.75rem;
      margin-bottom: 0.75rem; }
    .read-more .hero-content p.read-more-text {
      margin-bottom: 3rem;
      font-size: 1.4rem;
      font-weight: 700;
      text-align: center;
      text-transform: uppercase; }

.post-template .main {
  width: 100%;
  margin: 0 auto;
  background: white; }
  .post-template .main .content {
    display: flex;
    max-width: 80rem;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    margin: auto; }
    @media (min-width: 35em) {
      .post-template .main .content {
        max-width: 84rem;
        padding: 4rem 2rem; } }
    @media (min-width: 50em) {
      .post-template .main .content {
        max-width: 88rem;
        padding: 4rem; } }
    .post-template .main .content > *:first-child {
      margin-top: 0; }
    .post-template .main .content > *:last-child {
      margin-bottom: 0; }

li[class$="icon"] {
  margin-right: .4rem; }
  li[class$="icon"] .label {
    position: absolute;
    top: auto;
    left: -10000px;
    overflow: hidden;
    width: 1px;
    height: 1px; }
  li[class$="icon"] a:before {
    display: inline-block;
    width: 2.5rem;
    height: 2.5rem;
    margin-top: -.5rem;
    background-color: rgba(0, 0, 0, 0.8);
    background-size: contain;
    content: "";
    -webkit-mask-size: contain;
            mask-size: contain;
    vertical-align: middle; }
  li[class$="icon"] a:hover:before, li[class$="icon"] a:focus:before {
    background-color: white; }

li.nav-github-icon a:before {
  -webkit-mask-image: url(../images/github.svg);
          mask-image: url(../images/github.svg); }

li.nav-twitter-icon a:before {
  -webkit-mask-image: url(../images/twitter.svg);
          mask-image: url(../images/twitter.svg); }

li.nav-rss-icon a:before {
  -webkit-mask-image: url(../images/rss.svg);
          mask-image: url(../images/rss.svg); }

li.nav-facebook-icon a:before {
  -webkit-mask-image: url(../images/facebook.svg);
          mask-image: url(../images/facebook.svg); }

li.nav-download-icon a:before {
  -webkit-mask-image: url(../images/download.svg);
          mask-image: url(../images/download.svg); }

li.nav-image-icon a:before {
  -webkit-mask-image: url(../images/image.svg);
          mask-image: url(../images/image.svg); }

li.nav-tumblr-icon a:before {
  -webkit-mask-image: url(../images/tumblr.svg);
          mask-image: url(../images/tumblr.svg); }

li.nav-steam-icon a:before {
  -webkit-mask-image: url(../images/steam.svg);
          mask-image: url(../images/steam.svg); }

li.nav-googleplus-icon a:before {
  -webkit-mask-image: url(../images/google-plus.svg);
          mask-image: url(../images/google-plus.svg); }

li.nav-camera-icon a:before {
  -webkit-mask-image: url(../images/camera.svg);
          mask-image: url(../images/camera.svg); }

li.nav-email-icon a:before {
  -webkit-mask-image: url(../images/email.svg);
          mask-image: url(../images/email.svg); }

li.nav-telegram-icon a:before {
  -webkit-mask-image: url(../images/telegram.svg);
          mask-image: url(../images/telegram.svg); }

li:last-of-type {
  margin-right: 0.75rem; }

.header .header--top .primary-menu {
  float: right; }
  .header .header--top .primary-menu ul {
    display: flex;
    margin: 0 0.75rem 0 0;
    list-style: none; }
    .header .header--top .primary-menu ul li {
      margin: 0;
      font-size: 1.4rem; }
      .header .header--top .primary-menu ul li a {
        display: block;
        padding: 0 0.5rem; }
        .header .header--top .primary-menu ul li a:hover, .header .header--top .primary-menu ul li a:focus {
          background: #1d1d1d;
          color: white;
          text-decoration: none; }

.header.-dark .header--top .primary-menu ul li[class$="icon"] a:before {
  background-color: white; }

.subscribe-modal {
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  width: 100%;
  height: 100%;
  margin: auto;
  background: rgba(0, 0, 0, 0.95);
  color: rgba(0, 0, 0, 0.8); }
  .subscribe-modal__content {
    position: relative;
    z-index: 100;
    -ms-grid-row-align: center;
        align-self: center;
    padding: 2rem;
    margin: auto;
    background: white;
    text-align: center; }
  .subscribe-modal__title {
    margin-top: 0; }
  .subscribe-modal__close.-overlay {
    position: absolute;
    z-index: 50;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
  .subscribe-modal__close.-button {
    position: absolute;
    top: 0;
    right: 0;
    width: 6rem;
    height: 6rem; }
    .subscribe-modal__close.-button:after {
      position: absolute;
      top: 8px;
      right: 0;
      width: 20px;
      height: 2px;
      color: white;
      content: "+";
      font-size: 45px;
      transform: rotate(45deg) translateY(-50%); }

.subscribe-form__group {
  display: flex;
  flex-direction: row;
  justify-content: center; }

.subscribe-form__input {
  height: 4rem;
  padding: 0 1rem;
  border: 0;
  border-radius: 2px;
  font-size: 1.6rem;
  line-height: 4rem; }
  .subscribe-form__input.-email {
    width: 18.75em;
    border: 1px solid #c9c9c9;
    margin-right: .4rem; }
  .subscribe-form__input.-submit {
    position: relative;
    background: #33f;
    color: white;
    cursor: pointer; }
    .subscribe-form__input.-submit:hover, .subscribe-form__input.-submit:focus {
      background: #0000b3; }
    .subscribe-form__input.-submit .button-loader {
      position: absolute;
      top: 1px;
      left: 50%;
      display: inline-block;
      height: 0;
      transform: scale(0.9) translateX(-50%);
      visibility: hidden; }
      .subscribe-form__input.-submit .button-loader svg path {
        fill: white; }

.subscribe-form__message {
  margin: 1.5rem 0; }
  .subscribe-form__message.-success {
    display: none;
    color: #050; }
  .subscribe-form__message.-error {
    display: none;
    color: #c00; }

.subscribe-success-message {
  position: fixed;
  z-index: 9000;
  top: 0;
  right: 0;
  left: 0;
  background: #050;
  color: white;
  line-height: 6rem;
  text-align: center;
  transform: translateY(-175%);
  transition: all 0.35s cubic-bezier(0.19, 1, 0.22, 1) 0.5s;
  visibility: visible; }
  .subscribe-success-message.close {
    transform: translateY(-175%);
    transition: all 1.35s cubic-bezier(0.19, 1, 0.22, 1);
    visibility: hidden; }
  .subscribe-success-message .subscribe-close-button {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
    .subscribe-success-message .subscribe-close-button:after {
      position: absolute;
      top: 8px;
      right: 0;
      width: 20px;
      height: 2px;
      color: white;
      content: "+";
      font-size: 45px;
      transform: rotate(45deg) translateY(-50%); }

.loading .subscribe-form__input.-submit .button-loader {
  visibility: visible; }

.loading .subscribe-form__input.-submit .button-content {
  visibility: hidden; }

.error .subscribe-form__message.-error {
  display: block;
  text-decoration: underline; }

.success .subscribe-form__message.success {
  display: block; }

.subscribe-success .subscribe-success-message:not(.close) {
  transform: translateY(0);
  visibility: visible; }

.tag-template .main {
  background: white; }
  .tag-template .main .tag {
    max-width: 80rem;
    margin: 0 auto; }
    .tag-template .main .tag .tag-content > *:first-child {
      margin-top: 0; }
    .tag-template .main .tag .tag-content > *:last-child {
      margin-bottom: 0; }

.skip-link {
  position: absolute;
  z-index: 100;
  top: -99999rem;
  left: 0;
  padding: 0.8rem 1.2rem;
  background: white; }
  .skip-link a {
    color: rgba(0, 0, 0, 0.8); }
  .skip-link:focus {
    top: 0; }

.sr-only {
  position: absolute;
  top: auto;
  left: -10000px;
  overflow: hidden;
  width: 1px;
  height: 1px; }

.animated {
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

.delay-1 {
  -webkit-animation-delay: .2s;
          animation-delay: .2s; }

.delay-2 {
  -webkit-animation-delay: .4s;
          animation-delay: .4s; }

.delay-3 {
  -webkit-animation-delay: .6s;
          animation-delay: .6s; }

.delay-4 {
  -webkit-animation-delay: .8s;
          animation-delay: .8s; }

.delay-5 {
  -webkit-animation-delay: 1s;
          animation-delay: 1s; }

@-webkit-keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

.fadeIn {
  -webkit-animation-name: fadeIn;
          animation-name: fadeIn; }

@-webkit-keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInUp {
  -webkit-animation-name: fadeInUp;
          animation-name: fadeInUp; }

/* Deprecated fix for the old way of handling images, just so they don't look terrible */
.content img[src$="#large"],
.content img[src$="#full"] {
  width: calc(100% + 3rem);
  margin-left: -1.5rem; }
  @media (min-width: 62.5em) {
    .content img[src$="#large"],
    .content img[src$="#full"] {
      width: 150%;
      margin-left: -25%; } }
  @media (min-width: 87.5em) {
    .content img[src$="#large"],
    .content img[src$="#full"] {
      width: 200%;
      margin-left: -50%; } }

/* Fix for 100vw and horizontal scrollbar */
body {
  overflow-x: hidden; }

.hidden {
  display: none; }

@media (min-width: 62.5em) {
  .alignleft,
  .alignright {
    width: 30rem;
    padding-bottom: 0;
    margin-bottom: 1.5rem; }
    .alignleft img,
    .alignright img {
      margin: 0; }
  .alignleft {
    margin-right: 1.5rem;
    margin-left: -16rem;
    float: left; }
    .alignleft q {
      width: initial;
      margin: 0;
      text-align: right; }
  blockquote.alignleft {
    padding-right: 2rem;
    padding-left: 0;
    border-right: 0.4rem solid #c9c9c9;
    border-left: 0;
    text-align: right; }
  q.alignleft {
    margin-top: 0;
    text-align: right; }
  .alignright {
    margin-right: -16rem;
    margin-left: 1.5rem;
    float: right; }
    .alignright q, .alignrightq {
      width: initial;
      margin: 0;
      text-align: left; }
  q.alignright {
    margin: 0;
    text-align: left; } }

@media print {
  .hidden\@print {
    display: none !important; }
  .kg-bookmark-thumbnail {
    display: none !important; }
  a,
  p,
  span,
  ul,
  ol,
  li,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: black !important; }
  .header {
    background: white !important;
    color: black !important; }
    .header:after {
      display: none !important; }
    .header .header--top {
      display: none !important; }
    .header .hero {
      height: auto !important; }
    .header .hero-content {
      width: 100% !important;
      max-width: 100% !important; }
    .header .post--read-time,
    .header .post--tags {
      display: none !important; }
  .content {
    width: 100% !important;
    max-width: 100% !important;
    padding: 0 !important;
    padding-top: 1.5rem; }
  .content > * {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    background: white !important;
    color: black !important; }
  .content pre {
    background: #f7f7f7 !important;
    color: black !important; }
    .content pre code {
      color: black !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
