@charset "UTF-8";
/* MAIN
---------------
Import all relevant files
--------------- */
/* VARIABLES
---------------
Setting up the variables. Default fonts, colors, widths and breakpoints.
--------------- */
.animated {
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

.delay-1 {
  -webkit-animation-delay: .2s;
          animation-delay: .2s; }

.delay-2 {
  -webkit-animation-delay: .4s;
          animation-delay: .4s; }

.delay-3 {
  -webkit-animation-delay: .6s;
          animation-delay: .6s; }

.delay-4 {
  -webkit-animation-delay: .8s;
          animation-delay: .8s; }

.delay-5 {
  -webkit-animation-delay: 1s;
          animation-delay: 1s; }

@-webkit-keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes fadeIn {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

.fadeIn {
  -webkit-animation-name: fadeIn;
          animation-name: fadeIn; }

@-webkit-keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0); }
  100% {
    opacity: 1;
    transform: none; } }

.fadeInUp {
  -webkit-animation-name: fadeInUp;
          animation-name: fadeInUp; }

.hidden {
  display: none; }

@media (min-width: 1000px) {
  .alignleft, .alignright {
    margin-bottom: 1em;
    padding-bottom: 0;
    width: 300px; }
    .alignleft img, .alignright img {
      margin: 0; }
  .alignleft {
    float: left;
    margin-right: 2em;
    margin-left: -160px; }
    .alignleft q {
      margin: 0;
      width: initial;
      text-align: right; }
  blockquote.alignleft {
    padding-right: 20px;
    padding-left: 0;
    border-right: 4px solid #e6e6e6;
    border-left: 0;
    text-align: right; }
  q.alignleft {
    margin-top: 0;
    text-align: right; }
  .alignright {
    float: right;
    margin-right: -160px;
    margin-left: 2em; }
    .alignright q, .alignrightq {
      margin: 0;
      width: initial;
      text-align: left; }
  q.alignright {
    margin: 0;
    text-align: left; } }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
  font-family: "Noto Sans", Helvetica, "Helvetica Neue", Arial, sans-serif;
  line-height: 1.2; }
  h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
    border: 0; }

h1 {
  margin-top: 40px;
  margin-bottom: 0;
  letter-spacing: -2px;
  font-size: 40px;
  font-size: 4rem; }
  @media (min-width: 400px) {
    h1 {
      font-size: 42px;
      font-size: 4.2rem; } }
  @media (min-width: 550px) {
    h1 {
      font-size: 47px;
      font-size: 4.7rem; } }
  @media (min-width: 800px) {
    h1 {
      font-size: 50px;
      font-size: 5rem; } }

h2 {
  margin-top: 30px;
  margin-bottom: 0;
  font-size: 30px;
  font-size: 3rem; }
  @media (min-width: 550px) {
    h2 {
      font-size: 32px;
      font-size: 3.2rem; } }
  @media (min-width: 800px) {
    h2 {
      font-size: 35px;
      font-size: 3.5rem; } }

h3 {
  margin-top: 25px;
  margin-bottom: 0;
  font-size: 25px;
  font-size: 2.5rem; }
  @media (min-width: 800px) {
    h3 {
      font-size: 25px;
      font-size: 2.5rem; } }

h4 {
  margin-top: 25px;
  margin-bottom: 0;
  font-weight: 700;
  font-size: 18px;
  font-size: 1.8rem; }

h5 {
  margin-top: 25px;
  margin-bottom: 0;
  font-weight: 700;
  font-size: 15px;
  font-size: 1.5rem; }

h6 {
  margin-top: 25px;
  margin-bottom: 0;
  font-weight: 700;
  font-size: 12px;
  font-size: 1.2rem; }

a {
  color: #000000;
  text-decoration: none;
  transition: all .2s; }
  a:hover {
    border-color: #000000;
    color: #000000; }

p, blockquote, figure, canvas, form {
  margin-top: 20px;
  margin-right: 0;
  margin-bottom: 0px;
  margin-left: 0; }

.note {
  padding: 10px;
  background: #e6e6e6; }

mark {
  padding: 2px;
  background-color: #FDFFB6;
  box-shadow: #FDFFB6 0 0 5px; }

sup {
  vertical-align: super;
  font-size: 13px;
  font-size: 1.3rem; }

blockquote {
  padding-left: 20px;
  border-left: 4px solid #e6e6e6;
  font-family: "Noto Serif", serif; }
  blockquote img {
    margin: 20px 0 !important;
    width: 100% !important; }

q {
  display: block;
  text-align: center;
  font-style: italic;
  font-size: 125%;
  font-family: "Noto Serif", serif; }
  @media (min-width: 550px) {
    q {
      margin-top: 40px;
      margin-bottom: 20px;
      margin-left: auto;
      margin-left: calc(0% - 20px);
      max-width: 100%;
      max-width: calc(100% + 40px);
      width: 100%;
      width: calc(100% + 40px); } }
  q:before, q:after {
    display: none; }

cite {
  display: block;
  color: #cccccc;
  text-transform: capitalize;
  font-style: normal;
  font-size: 14px;
  font-size: 1.4rem;
  font-family: "Noto Sans", Helvetica, "Helvetica Neue", Arial, sans-serif; }
  cite a {
    border: none;
    color: inherit; }
  cite:before {
    content: "\2014 \2009"; }

ul {
  padding: 0;
  list-style: square inside; }
  ul li {
    margin: 0; }
  ul ul, ul ol {
    margin-top: 0;
    margin-bottom: 0; }

ol {
  padding: 0;
  list-style: decimal inside; }
  ol li {
    margin: 0; }
  ol ul, ol ol {
    margin-top: 0;
    margin-bottom: 0; }

em {
  font-style: italic; }

strong {
  font-weight: bold; }

pre {
  margin-top: 20px; }

code {
  padding: 3px 6px;
  background: #F1F1F1;
  color: #000000;
  font-size: 15px;
  font-size: 1.5rem;
  font-family: "Inconsolata", Consolas, "Droid Sans Mono", "Courier New"; }

hr {
  height: 4px;
  border: 0;
  background: #e6e6e6;
  margin: 20px 0 0; }

.author-template .hero {
  text-align: center; }
  .author-template .hero .author-image {
    width: 100px;
    height: auto;
    border-radius: 50%;
    margin-bottom: 30px; }
    @media (min-width: 400px) {
      .author-template .hero .author-image {
        width: 150px; } }
    @media (min-width: 550px) {
      .author-template .hero .author-image {
        width: 175px; } }
  .author-template .hero .author-data span {
    display: block;
    margin-bottom: 10px; }

html {
  font-size: 62.5%;
  display: flex;
  flex-direction: column;
  height: 100%; }

body {
  f1ex: 1;
  display: flex;
  flex-direction: column;
  overflow-y: scroll;
  min-height: 100%;
  height: 100%;
  background: white;
  color: rgba(0, 0, 0, 0.8);
  font-size: 14px;
  font-size: 1.4rem;
  font-family: "Noto Sans", Helvetica, "Helvetica Neue", Arial, sans-serif;
  line-height: 1.8; }
  @media (min-width: 400px) {
    body {
      font-size: 18px;
      font-size: 1.8rem; } }
  body main {
    flex: 1; }

* {
  box-sizing: border-box; }

.index {
  background: #f2f2f2; }
  .index .header:not(.cover-image) {
    background: white;
    color: rgba(0, 0, 0, 0.7); }
    .index .header:not(.cover-image) a {
      color: black; }

.page-template .main {
  background: #FFFFFF;
  margin: 0 auto;
  width: 100%; }
  .page-template .main .content {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 800px;
    padding: 20px;
    margin: auto; }
    @media (min-width: 800px) {
      .page-template .main .content {
        padding: 30px;
        max-width: 860px; } }
    @media (min-width: 1000px) {
      .page-template .main .content {
        padding: 40px 30px; } }
    .page-template .main .content > * {
      min-width: 100%; }
    .page-template .main .content > *:first-child {
      margin-top: 0; }
    .page-template .main .content > *:last-child {
      margin-bottom: 0; }

.post-template .main {
  background: #FFFFFF;
  margin: 0 auto;
  width: 100%; }
  .post-template .main .content {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 840px;
    padding: 20px;
    margin: auto; }
    @media (min-width: 800px) {
      .post-template .main .content {
        padding: 30px;
        max-width: 860px; } }
    @media (min-width: 1000px) {
      .post-template .main .content {
        padding: 40px 30px; } }
    .post-template .main .content > * {
      min-width: 100%; }
    .post-template .main .content > *:first-child {
      margin-top: 0; }
    .post-template .main .content > *:last-child {
      margin-bottom: 0; }

.tag-template .main {
  background: #FFFFFF; }
  .tag-template .main .tag {
    margin: 0 auto;
    max-width: 800px; }
    .tag-template .main .tag .tag-content > *:first-child {
      margin-top: 0; }
    .tag-template .main .tag .tag-content > *:last-child {
      margin-bottom: 0; }

#footer {
  background: #252525;
  color: #999999;
  text-transform: uppercase;
  font-size: 12px;
  font-size: 1.2rem;
  -webkit-animation-delay: 1s;
          animation-delay: 1s; }
  #footer .colophon {
    padding: 50px 20px; }
    #footer .colophon section {
      margin: 0 auto;
      max-width: 800px; }
      #footer .colophon section:first-child {
        margin-top: 0; }
      #footer .colophon section:last-child {
        margin-bottom: 0; }
      #footer .colophon section .ghost-logo {
        display: inline-block;
        margin-left: 5px;
        width: 4.2em;
        height: 1.3em;
        background: #989898;
        vertical-align: text-bottom;
        transition: .2s all ease;
        -webkit-mask-image: url(../images/ghost-logo.svg);
                mask-image: url(../images/ghost-logo.svg);
        -webkit-mask-size: contain;
                mask-size: contain;
        -webkit-mask-repeat: no-repeat;
                mask-repeat: no-repeat; }
        #footer .colophon section .ghost-logo:hover {
          background-color: white; }
  #footer .bottom {
    padding: 20px 20px;
    background: #1a1919; }
    #footer .bottom section {
      margin: 0 auto;
      max-width: 800px; }
      #footer .bottom section a {
        color: #999999; }
        #footer .bottom section a:hover {
          color: #FFFFFF; }
        #footer .bottom section a i.fa.fa-heart {
          color: #d85151; }
  #footer a {
    border-color: rgba(255, 255, 255, 0);
    color: #FFFFFF; }
    #footer a:hover {
      border-color: #FFFFFF; }
  #footer .heart {
    display: inline-block;
    width: 1.3em;
    height: 1.3em;
    background: #FF4D4C;
    vertical-align: text-bottom;
    -webkit-mask-image: url(../images/heart.svg);
            mask-image: url(../images/heart.svg);
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat; }

.feed.grid {
  display: flex;
  flex-direction: column; }
  @media (min-width: 800px) {
    @supports (display: grid) {
      .feed.grid {
        display: -ms-grid;
        display: grid;
        grid-gap: 20px;
        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
        grid-auto-flow: dense; }
        .feed.grid .post {
          margin-bottom: 0; }
          .feed.grid .post.tag-hash-tall {
            min-height: 50vh; }
          .feed.grid .post.featured {
            -ms-grid-column-span: 2;
            grid-column: span 2; }
          .feed.grid .post.tag-hash-tall {
            -ms-grid-row-span: 2;
            grid-row-end: span 2; } }
    @supports not (display: grid) {
      .feed.grid {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap; }
        .feed.grid .post {
          width: calc(50% - 10px); }
          .feed.grid .post:nth-of-type(2n) {
            margin-left: 20px; } } }

.header {
  background: black;
  color: rgba(255, 255, 255, 0.7); }
  .header a {
    color: white; }
  .header.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover;
    color: rgba(255, 255, 255, 0.7);
    color: white; }
    .header.cover-image a {
      color: white; }
    .header.cover-image:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      z-index: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7); }
  .header .header--top {
    position: relative;
    z-index: 10;
    display: flex;
    flex-direction: row;
    overflow: hidden;
    max-height: 60px;
    font-size: 14px;
    font-size: 1.4rem;
    line-height: 60px;
    justify-content: space-between; }
    .header .header--top a.blog-title {
      float: left;
      padding-left: 20px;
      height: 60px;
      font-weight: 600; }
      .header .header--top a.blog-title img.blog-logo {
        margin: 15px 0;
        padding: 0;
        width: auto;
        height: 30px; }
    .header .header--top .blog-description {
      display: none;
      margin-left: 10px; }
      @media (min-width: 550px) {
        .header .header--top .blog-description {
          display: inline; } }
    .header .header--top nav.blog-navigation {
      float: right; }
      .header .header--top nav.blog-navigation ul.nav {
        margin: 0; }
        .header .header--top nav.blog-navigation ul.nav li {
          display: inline-block; }
  .header .hero {
    position: relative;
    z-index: 10;
    display: flex;
    flex-direction: column;
    max-height: calc(100vh - 60px);
    height: 400px; }
    @media (min-width: 400px) {
      .header .hero {
        height: 500px; } }
    @media (min-width: 550px) {
      .header .hero {
        height: 600px; } }
    @media (min-width: 800px) {
      .header .hero {
        height: 700px; } }
    @media (min-width: 1000px) {
      .header .hero {
        height: 700px; } }
    .header .hero .hero-content {
      margin: auto;
      max-width: 800px;
      width: calc(100% - 40px);
      color: rgba(255, 255, 255, 0.7); }
      @media (min-width: 800px) {
        .header .hero .hero-content {
          width: calc(100% - 60px); } }
      .header .hero .hero-content p {
        margin-top: 1rem;
        margin-bottom: 1rem; }
      .header .hero .hero-content h1 {
        margin-top: 0;
        color: white; }
        .header .hero .hero-content h1 img {
          max-width: 400px;
          width: 100%; }
      .header .hero .hero-content a {
        color: rgba(255, 255, 255, 0.7);
        -webkit-text-decoration: dotted;
                text-decoration: dotted; }
        .header .hero .hero-content a:hover {
          color: white; }
      .header .hero .hero-content .post--tags {
        display: block;
        overflow: auto;
        margin-top: 2rem;
        width: 100%;
        font-size: 12px;
        font-size: 1.2rem; }
        .header .hero .hero-content .post--tags a {
          display: inline-block;
          float: left;
          margin-right: 3px;
          margin-bottom: 3px;
          padding: 6px;
          border: 1px solid rgba(255, 255, 255, 0.6);
          background: transparent;
          color: rgba(255, 255, 255, 0.6);
          text-transform: uppercase;
          line-height: 1; }
          .header .hero .hero-content .post--tags a:hover {
            background: white;
            color: black !important; }

.content img {
  max-width: 100%;
  height: auto;
  margin: 0 auto;
  display: block; }

.kg-card.kg-bookmark-card {
  width: 100%;
  position: relative; }
  .kg-card.kg-bookmark-card .kg-bookmark-container {
    display: flex;
    flex-direction: column;
    color: #202020;
    font-family: inherit;
    text-decoration: none; }
    @media (min-width: 550px) {
      .kg-card.kg-bookmark-card .kg-bookmark-container {
        flex-direction: row-reverse; } }
  .kg-card.kg-bookmark-card .kg-bookmark-container:hover {
    text-decoration: none; }
  .kg-card.kg-bookmark-card .kg-bookmark-content {
    flex-basis: 0;
    flex-grow: 999;
    padding: 20px;
    order: 1;
    background: #F7F7F7; }
  .kg-card.kg-bookmark-card .kg-bookmark-title {
    font-weight: 600; }
  .kg-card.kg-bookmark-card .kg-bookmark-metadata,
  .kg-card.kg-bookmark-card .kg-bookmark-description {
    margin-top: .5em; }
  .kg-card.kg-bookmark-card .kg-bookmark-metadata {
    align-items: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; }
  .kg-card.kg-bookmark-card .kg-bookmark-description {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden; }
  .kg-card.kg-bookmark-card .kg-bookmark-icon {
    display: inline-block;
    width: 1em;
    height: 1em;
    vertical-align: text-bottom;
    margin-right: .5em;
    margin-bottom: .05em; }
  .kg-card.kg-bookmark-card .kg-bookmark-thumbnail {
    display: flex;
    flex-basis: 24rem;
    flex-grow: 1; }
  .kg-card.kg-bookmark-card .kg-bookmark-thumbnail img {
    max-width: 100%;
    height: auto;
    vertical-align: bottom;
    -o-object-fit: cover;
       object-fit: cover; }
  .kg-card.kg-bookmark-card .kg-bookmark-author {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden; }
  .kg-card.kg-bookmark-card .kg-bookmark-publisher::before {
    content: "•";
    margin: 0 .5em; }

pre {
  width: 100vw;
  max-width: 100%;
  padding: 5px 15px;
  background: #f7f7f7;
  overflow-x: scroll;
  margin-top: 20px;
  margin-right: 0;
  margin-bottom: 0;
  margin-left: 0;
  word-wrap: break-word; }
  pre code {
    padding: 0;
    background: none;
    font-size: 12px;
    font-size: 1.2rem;
    font-family: "Inconsolata", Consolas, "Droid Sans Mono", "Courier New"; }
    @media (min-width: 800px) {
      pre code {
        font-size: 15px;
        font-size: 1.5rem; } }

.kg-card.kg-embed-card iframe {
  width: 100%;
  height: auto; }

.kg-card.kg-embed-card.responsive-video {
  position: relative; }
  .kg-card.kg-embed-card.responsive-video iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

@media (min-width: 800px) {
  .kg-card.kg-width-full {
    margin-top: 40px;
    margin-bottom: 20px; } }

.kg-card.kg-width-full img {
  max-width: none;
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw; }

@media (min-width: 800px) {
  .kg-card.kg-gallery-card {
    margin-top: 40px;
    margin-bottom: 20px; } }

.kg-card.kg-gallery-card .kg-gallery-container {
  display: flex;
  flex-direction: column;
  margin: 0 auto 0; }
  .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row {
    display: flex;
    flex-direction: row;
    justify-content: center; }
    .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row:not(:first-of-type) {
      margin: 10px 0 0 0; }
    .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image:not(:first-of-type) {
      margin: 0 0 0 10px; }
    .kg-card.kg-gallery-card .kg-gallery-container .kg-gallery-row .kg-gallery-image img {
      display: block;
      margin: 0;
      width: 100%;
      height: 100%; }

.kg-card.kg-image-card figcaption {
  text-align: center;
  font-size: 14px;
  margin-top: 10px; }

@media (min-width: 800px) {
  .kg-card {
    margin-top: 40px;
    margin-bottom: 20px; } }

.kg-card.kg-width-wide {
  width: 100vw;
  max-width: 100%; }
  @media (min-width: 800px) {
    .kg-card.kg-width-wide {
      margin-top: 40px;
      margin-bottom: 20px;
      max-width: 740px; } }
  @media (min-width: 1000px) {
    .kg-card.kg-width-wide {
      max-width: 900px; } }
  @media (min-width: 1400px) {
    .kg-card.kg-width-wide {
      max-width: 1300px; } }
  .kg-card.kg-width-wide img {
    max-width: 100%; }

.content a {
  color: #000000;
  text-decoration: underline;
  transition: all .2s; }
  .content a:hover {
    border-color: #000000;
    color: #000000; }

.feed .post {
  position: relative;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  margin-bottom: 20px;
  padding: 20px;
  background-color: #585858;
  background-position: center;
  background-size: cover;
  color: white; }
  @media (min-width: 550px) {
    .feed .post {
      padding: 30px;
      min-height: 25vh; } }
  .feed .post a {
    color: inherit; }
  .feed .post.has-image:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8); }
    @media (min-width: 550px) {
      .feed .post.has-image:after {
        background: rgba(0, 0, 0, 0.7); } }
  .feed .post .post--top-content {
    position: relative;
    z-index: 20;
    max-width: 800px;
    flex: 1; }
  .feed .post .post--bottom-content {
    position: relative;
    z-index: 20;
    max-width: 800px;
    height: auto; }
  .feed .post .post--tags {
    display: block;
    overflow: auto;
    margin-bottom: 15px;
    width: 100%;
    font-size: 12px;
    font-size: 1.2rem; }
    .feed .post .post--tags a {
      display: inline-block;
      float: left;
      margin-right: 3px;
      margin-bottom: 3px;
      padding: 6px;
      border: 1px solid rgba(255, 255, 255, 0.6);
      background: transparent;
      color: rgba(255, 255, 255, 0.6);
      text-transform: uppercase;
      line-height: 1; }
      @media (min-width: 1000px) {
        .feed .post .post--tags a:not(:nth-of-type(1)) {
          opacity: 0; } }
      .feed .post .post--tags a:hover {
        background: white;
        color: #202020 !important; }
    .feed .post .post--tags:hover a {
      border-color: white;
      color: white; }
    .feed .post .post--tags:hover a:not(:nth-of-type(1)) {
      display: inline-block; }
  .feed .post:hover .post--tags a:not(:nth-of-type(1)) {
    opacity: 1; }
  .feed .post .post--title {
    margin: 0; }
    .feed .post .post--title a {
      font-size: inherit; }
  .feed .post .post--excerpt {
    margin: 15px 0;
    max-width: 550px;
    color: rgba(255, 255, 255, 0.6);
    font-size: 14px;
    font-size: 1.4rem; }
  .feed .post .post--read-time {
    margin-bottom: 1em;
    color: rgba(255, 255, 255, 0.6);
    font-size: 14px;
    font-size: 1.4rem; }
  .feed .post .post--meta {
    display: block;
    color: rgba(255, 255, 255, 0.6);
    font-size: 14px;
    font-size: 1.4rem;
    line-height: 1.5; }
    .feed .post .post--meta .author {
      color: white; }
      .feed .post .post--meta .author a {
        border-color: transparent; }
        .feed .post .post--meta .author a:hover {
          border-color: white; }

.feed {
  padding: 20px;
  padding-bottom: 0; }

.header .header--top nav.blog-navigation {
  float: right; }
  .header .header--top nav.blog-navigation ul {
    margin: 0;
    margin-right: 10px; }
    .header .header--top nav.blog-navigation ul li {
      display: inline-block;
      margin-right: 10px;
      font-size: 14px;
      line-height: 60px; }
      .header .header--top nav.blog-navigation ul li[class$="icon"] {
        margin-right: 5px; }
        .header .header--top nav.blog-navigation ul li[class$="icon"] .label {
          display: none; }
        .header .header--top nav.blog-navigation ul li[class$="icon"] a:before {
          content: "";
          display: inline-block;
          margin-top: -5px;
          width: 25px;
          height: 25px;
          background-color: gray;
          background-size: contain;
          vertical-align: middle;
          -webkit-mask-size: contain;
                  mask-size: contain; }
        .header .header--top nav.blog-navigation ul li[class$="icon"] a:hover:before {
          background-color: black; }
      .header .header--top nav.blog-navigation ul li.nav-github-icon a:before {
        -webkit-mask-image: url(../images/github.svg);
                mask-image: url(../images/github.svg); }
      .header .header--top nav.blog-navigation ul li.nav-twitter-icon a:before {
        -webkit-mask-image: url(../images/twitter.svg);
                mask-image: url(../images/twitter.svg); }
      .header .header--top nav.blog-navigation ul li.nav-rss-icon a:before {
        -webkit-mask-image: url(../images/rss.svg);
                mask-image: url(../images/rss.svg); }
      .header .header--top nav.blog-navigation ul li.nav-facebook-icon a:before {
        -webkit-mask-image: url(../images/facebook.svg);
                mask-image: url(../images/facebook.svg); }
      .header .header--top nav.blog-navigation ul li.nav-download-icon a:before {
        -webkit-mask-image: url(../images/download.svg);
                mask-image: url(../images/download.svg); }
      .header .header--top nav.blog-navigation ul li.nav-image-icon a:before {
        -webkit-mask-image: url(../images/image.svg);
                mask-image: url(../images/image.svg); }
      .header .header--top nav.blog-navigation ul li.nav-tumblr-icon a:before {
        -webkit-mask-image: url(../images/tumblr.svg);
                mask-image: url(../images/tumblr.svg); }
      .header .header--top nav.blog-navigation ul li.nav-steam-icon a:before {
        -webkit-mask-image: url(../images/steam.svg);
                mask-image: url(../images/steam.svg); }
      .header .header--top nav.blog-navigation ul li.nav-googleplus-icon a:before {
        -webkit-mask-image: url(../images/google-plus.svg);
                mask-image: url(../images/google-plus.svg); }
      .header .header--top nav.blog-navigation ul li.nav-camera-icon a:before {
        -webkit-mask-image: url(../images/camera.svg);
                mask-image: url(../images/camera.svg); }
      .header .header--top nav.blog-navigation ul li.nav-email-icon a:before {
        -webkit-mask-image: url(../images/email.svg);
                mask-image: url(../images/email.svg); }
      .header .header--top nav.blog-navigation ul li.nav-telegram-icon a:before {
        -webkit-mask-image: url(../images/telegram.svg);
                mask-image: url(../images/telegram.svg); }
      .header .header--top nav.blog-navigation ul li.nav-camera-icon a:before {
        -webkit-mask-image: url(../images/camera.svg);
                mask-image: url(../images/camera.svg); }
      .header .header--top nav.blog-navigation ul li:last-of-type {
        margin-right: 10px; }

.header.cover-image .header--top nav.blog-navigation ul li[class$="icon"] a:before {
  background-color: white; }

nav.pagination {
  text-align: center;
  line-height: 120px; }
  nav.pagination .newer-posts, nav.pagination .older-posts {
    color: black; }
  nav.pagination .page-number {
    margin: 0 20px;
    color: gray; }

.read-more {
  padding: 50px 0;
  max-height: 100vh;
  background: black;
  color: rgba(255, 255, 255, 0.7); }
  @media (min-width: 550px) {
    .read-more {
      padding: 75px 0; } }
  @media (min-width: 1000px) {
    .read-more {
      padding: 100px 0; } }
  .read-more.home {
    background: white;
    color: rgba(0, 0, 0, 0.7); }
    .read-more.home a {
      color: black; }
  .read-more.cover-image {
    position: relative;
    background: black;
    background-position: center;
    background-size: cover; }
    .read-more.cover-image:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      z-index: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7); }
  .read-more:hover {
    color: white; }
    .read-more:hover a {
      color: white; }
  .read-more .hero-content {
    position: relative;
    z-index: 10;
    margin: auto;
    max-width: 800px;
    width: calc(100% - 40px); }
    .read-more .hero-content .post-title {
      display: block;
      letter-spacing: -2px;
      font-size: 35px;
      font-size: 3.5rem;
      line-height: 1.2; }
      @media (min-width: 400px) {
        .read-more .hero-content .post-title {
          font-size: 40px;
          font-size: 4rem; } }
      @media (min-width: 550px) {
        .read-more .hero-content .post-title {
          font-size: 45px;
          font-size: 4.5rem; } }
      @media (min-width: 800px) {
        .read-more .hero-content .post-title {
          font-size: 50px;
          font-size: 5rem; } }
    .read-more .hero-content p {
      margin-top: 1rem;
      margin-bottom: 1rem; }
    .read-more .hero-content p.read-more-text {
      text-align: center;
      color: rgba(255, 255, 255, 0.7);
      font-weight: 700;
      margin-bottom: 3rem;
      font-size: 1.4rem;
      text-transform: uppercase; }

/* Deprecated fix for the old way of handling images, just so they don't look terrible */
.content img[src$="#large"], .content img[src$="#full"] {
  margin-left: -20px;
  width: calc(100% + 40px); }
  @media (min-width: 1000px) {
    .content img[src$="#large"], .content img[src$="#full"] {
      width: 150%;
      margin-left: -25%; } }
  @media (min-width: 1400px) {
    .content img[src$="#large"], .content img[src$="#full"] {
      width: 200%;
      margin-left: -50%; } }

/* Fix for 100vw and horizontal scrollbar */
body {
  overflow-x: hidden; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
